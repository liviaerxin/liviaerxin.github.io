"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5207],{10801:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var r=n(59187),o=n(74848),i=n(28453);const s={authors:["frank"],tags:["Python Celery"],description:"Python Celery",keywords:["Python Celery"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2025-04-20T00:00:00.000Z"),draft:!1,enableComments:!0},l="Orchestrating DAG-based task workflow in Celery",a={authorsImageUrls:[void 0]},c=[];function d(e){const t={a:"a",code:"code",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["What's ",(0,o.jsx)(t.strong,{children:"workflow"})," in Celery?"]}),"\n",(0,o.jsxs)(t.p,{children:["In ",(0,o.jsx)(t.strong,{children:"Celery"}),", ",(0,o.jsx)(t.strong,{children:"workflow"})," is composed of multiple ",(0,o.jsx)(t.strong,{children:"tasks"}),", and a ",(0,o.jsx)(t.strong,{children:"task"})," is deemed to be a universal unit of the ",(0,o.jsx)(t.strong,{children:"workflow"}),", as a function in the program. In ",(0,o.jsx)(t.strong,{children:"Celery"}),", it's recommended to divide a long-running task into multiple short-running tasks. ",(0,o.jsx)(t.strong,{children:"workflow"})," comes out to help ease the orchestrations of the work, such as ",(0,o.jsx)(t.code,{children:"chain()"})," three tasks."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/liviaerxin/fastapi-celery-ml/blob/main/app/examples/celery_workflow.py",children:"A demo workflow"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var r=n(96540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}},59187:e=>{e.exports=JSON.parse('{"permalink":"/blog/celery-workflow","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/main/blog/../../blog/celery-workflow.mdx","source":"@site/../../blog/celery-workflow.mdx","title":"Orchestrating DAG-based task workflow in Celery","description":"Python Celery","date":"2025-04-20T00:00:00.000Z","tags":[{"inline":true,"label":"Python Celery","permalink":"/blog/tags/python-celery"}],"readingTime":0.86,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Backend & Applied ML Engineer","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank","page":null}],"frontMatter":{"authors":["frank"],"tags":["Python Celery"],"description":"Python Celery","keywords":["Python Celery"],"image":"https://i.imgur.com/mErPwqL.png","date":"2025-04-20T00:00:00.000Z","draft":false,"enableComments":true},"unlisted":false,"prevItem":{"title":"Building an End-to-End ML Deployment Pipeline with MLflow, FastAPI, and Docker","permalink":"/blog/end-to-end-ml-deployment"},"nextItem":{"title":"Lightweight CI/CD with Git Hooks and Docker Compose","permalink":"/blog/ci-cd-githook-docker"}}')}}]);