"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4444],{28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var o=i(96540);const n={},r=o.createContext(n);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(r.Provider,{value:t},e.children)}},41848:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var o=i(97107),n=i(74848),r=i(28453);const s={description:"A lightweight CI/CD method using Git push and Docker, no third-party tools needed.",keywords:["ci/cd","docker","git"],image:"https://i.imgur.com/mErPwqL.png",tags:["ci/cd","docker","git"],last_update:{date:new Date("2025-04-14T00:00:00.000Z")},date:new Date("2025-04-13T00:00:00.000Z"),authors:["frank"]},a="Lightweight CI/CD with Git Hooks and Docker Compose",c={authorsImageUrls:[void 0]},d=[];function l(e){const t={code:"code",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["For small projects or self-hosted apps, using a full-fledged CI/CD tool like GitHub Actions or Jenkins can be overkill. What if you could have automated deployments ",(0,n.jsx)(t.strong,{children:"without any third-party service"}),", and all you need is ",(0,n.jsx)(t.strong,{children:"Git and SSH"}),"?"]}),"\n",(0,n.jsxs)(t.p,{children:["In this post, we\u2019ll walk through setting up a lightweight, no-cost CI/CD pipeline using ",(0,n.jsx)(t.strong,{children:"Git hooks"})," and ",(0,n.jsx)(t.strong,{children:"Docker Compose"}),", with deployments triggered by a simple ",(0,n.jsx)(t.code,{children:"git push"})," to your production server."]})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},97107:e=>{e.exports=JSON.parse('{"permalink":"/blog/ci-cd-githook-docker","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/docs/practice/../../blog/ci-cd-githook-docker.mdx","source":"@site/../../blog/ci-cd-githook-docker.mdx","title":"Lightweight CI/CD with Git Hooks and Docker Compose","description":"A lightweight CI/CD method using Git push and Docker, no third-party tools needed.","date":"2025-04-13T00:00:00.000Z","tags":[{"inline":true,"label":"ci/cd","permalink":"/blog/tags/ci-cd"},{"inline":true,"label":"docker","permalink":"/blog/tags/docker"},{"inline":true,"label":"git","permalink":"/blog/tags/git"}],"readingTime":3.27,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Backend & Applied ML Engineer","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank","page":null}],"frontMatter":{"description":"A lightweight CI/CD method using Git push and Docker, no third-party tools needed.","keywords":["ci/cd","docker","git"],"image":"https://i.imgur.com/mErPwqL.png","tags":["ci/cd","docker","git"],"last_update":{"date":"2025-04-14T00:00:00.000Z"},"date":"2025-04-13T00:00:00.000Z","authors":["frank"]},"unlisted":false,"prevItem":{"title":"Orchestrating DAG-based task workflow in Celery","permalink":"/blog/celery-workflow"},"nextItem":{"title":"Intercepting HTTPs traffic from Android emulator","permalink":"/blog/how-to-intercept-https-traffic-from-android-emulator"}}')}}]);