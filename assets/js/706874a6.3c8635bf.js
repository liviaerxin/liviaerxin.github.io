"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[604],{97600:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>h,contentTitle:()=>d,default:()=>f,frontMatter:()=>p,metadata:()=>u,toc:()=>m});var s=t(74848),i=t(28453),a=t(72170),o=t.n(a);const c='# main.py\nfrom fastapi import FastAPI\nimport asyncio\n\napp = FastAPI()\nlock = asyncio.Lock()\n\ncounter = 0\n\n\n@app.post("/limit")\nasync def func():\n    global counter\n    async with lock:\n        print("Hello")\n        counter = counter + 1\n        await asyncio.sleep(2)\n        print("bye")\n        await asyncio.sleep(2)\n        return {"counter": counter}\n\n\n"""\nMake 2 requests at a time, output from server:\n\nINFO:     127.0.0.1:60228 - "POST /limit HTTP/1.1" 200 OK\nHello\nbye\nINFO:     127.0.0.1:51010 - "POST /limit HTTP/1.1" 200 OK\nHello\nbye\nINFO:     127.0.0.1:51022 - "POST /limit HTTP/1.1" 200 OK\n\nRequest 1:\n\n\u276f curl -X \'POST\' \\\n  \'http://127.0.0.1:8000/limit\' \\\n  -H \'accept: application/json\' \\\n  -d \'\'\n{"counter":1}%\n\nRequest 2:\n\n\u276f curl -X \'POST\' \\\n  \'http://127.0.0.1:8000/limit\' \\\n  -H \'accept: application/json\' \\\n  -d \'\'\n{"counter":2}%\n"""\n',r='# main.py\nfrom fastapi import FastAPI\nimport asyncio\n\napp = FastAPI()\nlock = asyncio.Lock()\n\ncounter = 0\n\n\n@app.post("/limit")\nasync def func():\n    global counter\n    print("Hello")\n    counter = counter + 1\n    await asyncio.sleep(2)\n    print("bye")\n    await asyncio.sleep(2)\n    return {"counter": counter}\n\n\n"""\nMake 2 requests at a time, output from server:\n\nHello\nHello\nbye\nbye\nINFO:     127.0.0.1:45160 - "POST /limit HTTP/1.1" 200 OK\nINFO:     127.0.0.1:45172 - "POST /limit HTTP/1.1" 200 OK\n\nRequest 1:\n\n\u276f curl -X \'POST\' \\\n  \'http://127.0.0.1:8000/limit\' \\\n  -H \'accept: application/json\' \\\n  -d \'\'\n{"counter":2}%\n\nRequest 2:\n\n\u276f curl -X \'POST\' \\\n  \'http://127.0.0.1:8000/limit\' \\\n  -H \'accept: application/json\' \\\n  -d \'\'\n{"counter":2}%\n"""\n',l='from fastapi import FastAPI\nimport asyncio\nimport os\n\napp = FastAPI()\n\n\nclass BackgroundService:\n    def __init__(self, loop: asyncio.AbstractEventLoop, tasks: list):\n        self.loop = loop\n        self.running = False\n\n    async def work(self):\n        print(f"Start background service")\n        while True:\n            print(f"Run background service...")\n            # Sleep for 1 second\n            await asyncio.sleep(1)\n\n    async def start(self):\n        self.task = self.loop.create_task(self.work())\n\n    async def stop(self):\n        self.task.cancel()\n        try:\n            await self.task\n        except asyncio.CancelledError:\n            print("Clean up background service")\n\n\nservice = BackgroundService(asyncio.get_running_loop())\n\n\n@app.on_event("startup")\nasync def startup():\n    print(f"PID[{os.getpid()}] app startup")\n    # schedule a task on main loop\n    await service.start()\n\n\n@app.on_event("shutdown")\nasync def shutdown():\n    # close ProcessPoolExecutor\n    print(f"PID[{os.getpid()}] app shutdown")\n    await service.stop()\n\n\n@app.post("/")\nasync def hello():\n    return {"value": f"hello world [{service.task.done()}] [{service.task.get_name()}]"}\n',p={foam_template:{name:"Docs Docusaurus Template",description:"Creates Docusaurus docs/slip",filepath:"docs/lock-http-request.md"},sidebar_label:"Lock Http Request",description:"Lock Endpoint Request At A Time",keywords:["limit only one access to endpoint at a time","lock access to endpoint at a time"],image:"https://i.imgur.com/mErPwqL.png",tags:["fastapi","python","http"],date:new Date("2024-06-21T00:00:00.000Z"),author:"frank"},d="FastAPI Best Practices",u={id:"fastapi-best-practices",title:"FastAPI Best Practices",description:"Lock Endpoint Request At A Time",source:"@site/../../docs/fastapi-best-practices.mdx",sourceDirName:".",slug:"/fastapi-best-practices",permalink:"/docs/fastapi-best-practices",draft:!1,unlisted:!1,editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../docs/fastapi-best-practices.mdx",tags:[{inline:!0,label:"fastapi",permalink:"/docs/tags/fastapi"},{inline:!0,label:"python",permalink:"/docs/tags/python"},{inline:!0,label:"http",permalink:"/docs/tags/http"}],version:"current",lastUpdatedBy:"liviaerxin",lastUpdatedAt:1744660906e3,frontMatter:{foam_template:{name:"Docs Docusaurus Template",description:"Creates Docusaurus docs/slip",filepath:"docs/lock-http-request.md"},sidebar_label:"Lock Http Request",description:"Lock Endpoint Request At A Time",keywords:["limit only one access to endpoint at a time","lock access to endpoint at a time"],image:"https://i.imgur.com/mErPwqL.png",tags:["fastapi","python","http"],date:"2024-06-21T00:00:00.000Z",author:"frank"},sidebar:"docs",previous:{title:".NET Finalizer",permalink:"/docs/dotnet-finalizer"},next:{title:"FFmpeg Command Samples",permalink:"/docs/ffmpeg-command-samples"}},h={},m=[{value:"Limit Only One Access to Endpoint at a Time",id:"limit-only-one-access-to-endpoint-at-a-time",level:2},{value:"Attach A Background Service Into the Application",id:"attach-a-background-service-into-the-application",level:2}];function y(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"fastapi-best-practices",children:"FastAPI Best Practices"}),"\n",(0,s.jsx)(e.h2,{id:"limit-only-one-access-to-endpoint-at-a-time",children:"Limit Only One Access to Endpoint at a Time"}),"\n",(0,s.jsxs)(e.p,{children:["Limit only one access to an endpoint at a time with ",(0,s.jsx)(e.code,{children:"asyncio.Lock"})," in ",(0,s.jsx)(e.code,{children:"asyncio"})," in ",(0,s.jsx)(e.strong,{children:"FastAPI"}),"."]}),"\n","\n",(0,s.jsx)(o(),{language:"python",title:"../code-snippets/python/fastapi_request_lock.py",children:c}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["NOTE: The ",(0,s.jsx)(e.code,{children:"asyncio.Lock"})," only take effect in the ",(0,s.jsx)(e.code,{children:"asyncio"})," loop level, if using ",(0,s.jsx)(e.code,{children:"unicorn"})," to run server in multiple processes, it can not lock the request!"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"No limitation."}),"\n","\n",(0,s.jsx)(o(),{language:"python",title:"../code-snippets/python/fastapi_request_nolock.py",children:r}),"\n",(0,s.jsxs)(e.p,{children:["Limit only one access to an endpoint at a time with ",(0,s.jsx)(e.code,{children:"thread.Lock"})]}),"\n",(0,s.jsxs)(e.p,{children:["Limit only one access to an endpoint at a time with ",(0,s.jsx)(e.code,{children:"process.Lock"})]}),"\n",(0,s.jsx)(e.h2,{id:"attach-a-background-service-into-the-application",children:"Attach A Background Service Into the Application"}),"\n",(0,s.jsx)(e.p,{children:"Run a background service behind the FastAPI server:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["share the same ",(0,s.jsx)(e.code,{children:"asyncio"})," main loop with the server"]}),"\n",(0,s.jsx)(e.li,{children:"the service start when the server starts and stop when the server stops"}),"\n",(0,s.jsx)(e.li,{children:"it should be light-weight and non-CPU heavy workload"}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.a,{href:"https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.cancel",children:"Coroutines and Tasks \u2014 Python 3.11.4 documentation"}),"\n",(0,s.jsx)(e.a,{href:"https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.create_task",children:"Event Loop \u2014 Python 3.11.4 documentation"})]}),"\n","\n",(0,s.jsx)(o(),{language:"python",title:"../code-snippets/python/fastapi_background_service.py",children:l})]})}function f(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(y,{...n})}):y(n)}}}]);