"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[210],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(96540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}},79297:e=>{e.exports=JSON.parse('{"permalink":"/blog/how-to-unicode","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/main/blog/../../blog/how-to-unicode.mdx","source":"@site/../../blog/how-to-unicode.mdx","title":"Playing with unicode in deep","description":"Playing with Unicode in deep","date":"2023-12-08T00:00:00.000Z","tags":[{"inline":true,"label":"how-to","permalink":"/blog/tags/how-to"},{"inline":true,"label":"unicode","permalink":"/blog/tags/unicode"}],"readingTime":5.685,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Backend & Applied ML Engineer","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank","page":null}],"frontMatter":{"authors":["frank"],"tags":["how-to","unicode"],"description":"Playing with Unicode in deep","keywords":["how-to","UTF8","encode"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-12-08T00:00:00.000Z","draft":false,"enableComments":true},"unlisted":false,"prevItem":{"title":"Making your own Dotfiles for your sake","permalink":"/blog/how-to-dotfiles"},"nextItem":{"title":"Discovering QEMU","permalink":"/blog/how-to-qemu"}}')},85699:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var i=n(79297),o=n(74848),r=n(28453);const s={authors:["frank"],tags:["how-to","unicode"],description:"Playing with Unicode in deep",keywords:["how-to","UTF8","encode"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-12-08T00:00:00.000Z"),draft:!1,enableComments:!0},a="Playing with unicode in deep",d={authorsImageUrls:[void 0]},c=[];function l(e){const t={code:"code",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"The smallest unit of all texts we see on the screen is one character. But you may wonder about:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"How one character is displayed on the screen?"}),"\n",(0,o.jsx)(t.li,{children:"How one character is kept in memory or disk in binary format(0 or 1)?"}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Let's dive into the ",(0,o.jsx)(t.strong,{children:"Unicode"})," to solve these questions."]}),"\n",(0,o.jsxs)(t.p,{children:["In Unicode, a character maps to something called code point which is a magic number written as hex like: ",(0,o.jsx)(t.code,{children:"U+20AC"})," and is still just a abstract layer."]}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Layer"}),(0,o.jsx)(t.th,{children:"Representation"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"screen"}),(0,o.jsx)(t.td,{children:"glyph"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"abstraction"}),(0,o.jsx)(t.td,{children:"unicode character"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"abstraction"}),(0,o.jsx)(t.td,{children:"unicode code point"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"disk"}),(0,o.jsx)(t.td,{children:"variable-length bytes(1 to 4 bytes)"})]})]})]}),"\n",(0,o.jsx)(t.p,{children:"How that code point is represented in memory or on disk?"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"UTF-8"}),", ",(0,o.jsx)(t.code,{children:"UTF-16"}),", and ",(0,o.jsx)(t.code,{children:"UTF-32"})," help translate unicode code point into binary data in 8-bit bytes which can be saved in disk or be transported in network."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"UTF-8"})," is character-to-bytes(1 to 4 bytes) encoding standard across almost all system and application."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);