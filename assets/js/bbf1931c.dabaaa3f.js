"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9792],{28128:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"wiki/wiki-video","title":"Wiki Video: Streaming Protocols, Video Chunk, Format/Codec, Playback","description":"This document serves as a fast tech wiki for anyone building or analyzing modern video streaming workflows.","source":"@site/../../docs/wiki/wiki-video.mdx","sourceDirName":"wiki","slug":"/wiki/wiki-video","permalink":"/docs/wiki/wiki-video","draft":false,"unlisted":false,"editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/docs/../../docs/wiki/wiki-video.mdx","tags":[{"inline":true,"label":"wiki","permalink":"/docs/tags/wiki"},{"inline":true,"label":"video","permalink":"/docs/tags/video"}],"version":"current","lastUpdatedBy":"frank","lastUpdatedAt":1745107200000,"frontMatter":{"position":1,"sidebar_label":"wiki video","description":"This document serves as a fast tech wiki for anyone building or analyzing modern video streaming workflows.","keywords":["wiki","video","streaming protocols","chunk"],"image":"https://i.imgur.com/mErPwqL.png","tags":["wiki","video"],"last_update":{"date":"2025-04-20T00:00:00.000Z","author":"frank"}},"sidebar":"docs","previous":{"title":"Wiki Network","permalink":"/docs/wiki/wiki-network"},"next":{"title":"Practice","permalink":"/docs/category/practice"}}');var r=n(74848),l=n(28453);const d={position:1,sidebar_label:"wiki video",description:"This document serves as a fast tech wiki for anyone building or analyzing modern video streaming workflows.",keywords:["wiki","video","streaming protocols","chunk"],image:"https://i.imgur.com/mErPwqL.png",tags:["wiki","video"],last_update:{date:new Date("2025-04-20T00:00:00.000Z"),author:"frank"}},t="Wiki Video: Streaming Protocols, Video Chunk, Format/Codec, Playback",o={},c=[{value:"Overview",id:"overview",level:2},{value:"Video Format/Codec",id:"video-formatcodec",level:2},{value:"Common Video Streaming Protocols",id:"common-video-streaming-protocols",level:2},{value:"Video Chunking(HLS/DASH)",id:"video-chunkinghlsdash",level:2},{value:"How Does Client Handle Chunks?",id:"how-does-client-handle-chunks",level:3},{value:"Playback",id:"playback",level:2},{value:"A. Chunk-Based Playback (HLS/DASH)",id:"a-chunk-based-playback-hlsdash",level:3},{value:"Bonus: Manifest Files",id:"bonus-manifest-files",level:4},{value:"Bonus: How to Create HLS from MP4 (ffmpeg Example)",id:"bonus-how-to-create-hls-from-mp4-ffmpeg-example",level:4},{value:"B. Progressive MP4 Download (Direct in Browser, via a streaming api supported by server)",id:"b-progressive-mp4-download-direct-in-browser-via-a-streaming-api-supported-by-server",level:3},{value:"Bonus: Streaming API In Python to Support Progressive MP4 Playback",id:"bonus-streaming-api-in-python-to-support-progressive-mp4-playback",level:4},{value:"Playback Comparison",id:"playback-comparison",level:3},{value:"References",id:"references",level:2}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"wiki-video-streaming-protocols-video-chunk-formatcodec-playback",children:"Wiki Video: Streaming Protocols, Video Chunk, Format/Codec, Playback"})}),"\n",(0,r.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(i.p,{children:"This document provides a quick reference to modern video streaming technologies, covering key differences between streaming protocols, video chunking strategies, and how video playback works in browsers and players. It focuses especially on the difference between progressive MP4 streaming and chunk-based playback via HLS/DASH."}),"\n",(0,r.jsx)(i.h2,{id:"video-formatcodec",children:"Video Format/Codec"}),"\n",(0,r.jsx)(i.h2,{id:"common-video-streaming-protocols",children:"Common Video Streaming Protocols"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Protocol"}),(0,r.jsx)(i.th,{children:"Full Name"}),(0,r.jsx)(i.th,{children:"Use Case"}),(0,r.jsx)(i.th,{children:"Live/VOD"}),(0,r.jsx)(i.th,{children:"Latency"}),(0,r.jsx)(i.th,{children:"Status"}),(0,r.jsx)(i.th,{children:"Notes"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"HLS"}),(0,r.jsx)(i.td,{children:"HTTP Live Streaming"}),(0,r.jsx)(i.td,{children:"Apple TV, Safari"}),(0,r.jsx)(i.td,{children:"Both"}),(0,r.jsx)(i.td,{children:"10\u201330 sec"}),(0,r.jsx)(i.td,{children:"Active"}),(0,r.jsx)(i.td,{children:"modern, scalable, used for both live and VOD."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"DASH"}),(0,r.jsx)(i.td,{children:"MPEG-DASH"}),(0,r.jsx)(i.td,{children:"YouTube, Netflix"}),(0,r.jsx)(i.td,{children:"Both"}),(0,r.jsx)(i.td,{children:"5\u201315 sec"}),(0,r.jsx)(i.td,{children:"Active"}),(0,r.jsx)(i.td,{children:"Open standard, alternative to HLS"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"RTMP"}),(0,r.jsx)(i.td,{children:"Real-Time Messaging Protocol"}),(0,r.jsx)(i.td,{children:"OBS to YouTube/Twitch"}),(0,r.jsx)(i.td,{children:"Live Only"}),(0,r.jsx)(i.td,{children:"~2\u20135 sec"}),(0,r.jsx)(i.td,{children:"Deprecated (playback)"}),(0,r.jsx)(i.td,{children:"used for sending live video to servers, not for playback"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"RTSP"}),(0,r.jsx)(i.td,{children:"Real-Time Streaming Protocol"}),(0,r.jsx)(i.td,{children:"CCTV, IP cameras"}),(0,r.jsx)(i.td,{children:"Live Only"}),(0,r.jsx)(i.td,{children:"~1 sec"}),(0,r.jsx)(i.td,{children:"Active (niche)"}),(0,r.jsx)(i.td,{children:"Not browser-compatible; mostly in special app(surveillance systems, etc.)"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"WebRTC"}),(0,r.jsx)(i.td,{children:"Web Real-Time Communication"}),(0,r.jsx)(i.td,{children:"Live chat, calls"}),(0,r.jsx)(i.td,{children:"Live Only"}),(0,r.jsx)(i.td,{children:"~0.5 sec"}),(0,r.jsx)(i.td,{children:"Growing"}),(0,r.jsx)(i.td,{children:"Low latency; peer-to-peer(video calls, etc.)"})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"video-chunkinghlsdash",children:"Video Chunking(HLS/DASH)"}),"\n",(0,r.jsxs)(i.p,{children:["In real world applications, like ",(0,r.jsx)(i.strong,{children:"youtube"}),", they will divide a video into many chunks for ",(0,r.jsx)(i.code,{children:"HLS"})," or ",(0,r.jsx)(i.code,{children:"DASH"})," for better performance."]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Protocol"}),(0,r.jsx)(i.th,{children:"Chunk File Format"}),(0,r.jsx)(i.th,{children:"Notes"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"HLS"}),(0,r.jsx)(i.td,{children:".ts (MPEG-2 Transport Stream) or .mp4 (fMP4)"}),(0,r.jsx)(i.td,{children:".ts is traditional, .mp4 (fMP4) is newer and supports low-latency"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"DASH"}),(0,r.jsx)(i.td,{children:".mp4 (fMP4)"}),(0,r.jsx)(i.td,{children:"DASH usually uses fragmented MP4"})]})]})]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"fMP4 = fragmented MP4 \u2014 this allows streaming before the full file is complete, perfect for chunked delivery."}),"\n",(0,r.jsx)(i.li,{children:"Each chunk might be ~2\u201310 seconds long depending on settings."}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"how-does-client-handle-chunks",children:"How Does Client Handle Chunks?"}),"\n",(0,r.jsx)(i.p,{children:"The client (player) must understand how to:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Parse the manifest file (",(0,r.jsx)(i.code,{children:".m3u8"})," for ",(0,r.jsx)(i.code,{children:"HLS"}),", ",(0,r.jsx)(i.code,{children:".mpd"})," for ",(0,r.jsx)(i.code,{children:"DASH"}),")"]}),"\n",(0,r.jsx)(i.li,{children:"Download the chunks in order"}),"\n",(0,r.jsx)(i.li,{children:"Buffer a few chunks ahead"}),"\n",(0,r.jsx)(i.li,{children:"Handle adaptive bitrate switching"}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Usually, this is done by a video player library like:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"HLS.js (for browsers)"}),"\n",(0,r.jsxs)(i.li,{children:["Shaka Player (for ",(0,r.jsx)(i.code,{children:"DASH"}),")"]}),"\n",(0,r.jsx)(i.li,{children:"AVPlayer (on iOS/tvOS)"}),"\n",(0,r.jsx)(i.li,{children:"ExoPlayer (on Android)"}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"playback",children:"Playback"}),"\n",(0,r.jsx)(i.h3,{id:"a-chunk-based-playback-hlsdash",children:"A. Chunk-Based Playback (HLS/DASH)"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"The player loads the manifest file."}),"\n",(0,r.jsx)(i.li,{children:"It picks the best quality (bitrate) based on bandwidth."}),"\n",(0,r.jsx)(i.li,{children:"It downloads chunk 1 and starts playing it while downloading chunk 2."}),"\n",(0,r.jsx)(i.li,{children:"It continues in parallel: downloading one or more chunks ahead, playing current one."}),"\n",(0,r.jsx)(i.li,{children:"If network speed drops, it switches bitrate (adaptive bitrate streaming)."}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"So, no, the player doesn\u2019t download the whole chunked video first. It streams it in real time by pulling chunks one by one."}),"\n",(0,r.jsx)(i.h4,{id:"bonus-manifest-files",children:"Bonus: Manifest Files"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"HLS"})," ",(0,r.jsx)(i.code,{children:".m3u8"})," Example:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-m3u8",children:"#EXTM3U\n#EXT-X-VERSION:3\n#EXTINF:10.0,\nchunk1.ts\n#EXTINF:10.0,\nchunk2.ts\n...\n"})}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"DASH"})," ",(0,r.jsx)(i.code,{children:".mpd"})," Manifest:"]}),"\n",(0,r.jsx)(i.p,{children:"An XML file describing all chunks, qualities, and durations."}),"\n",(0,r.jsx)(i.h4,{id:"bonus-how-to-create-hls-from-mp4-ffmpeg-example",children:"Bonus: How to Create HLS from MP4 (ffmpeg Example)"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-bash",children:"ffmpeg -i input.mp4 \\\n  -codec: copy -start_number 0 \\\n  -hls_time 6 -hls_list_size 0 \\\n  -f hls output.m3u8\n"})}),"\n",(0,r.jsxs)(i.p,{children:["This will create ",(0,r.jsx)(i.code,{children:".ts"})," chunks and an ",(0,r.jsx)(i.code,{children:".m3u8"})," playlist ready for HLS playback."]}),"\n",(0,r.jsx)(i.h3,{id:"b-progressive-mp4-download-direct-in-browser-via-a-streaming-api-supported-by-server",children:"B. Progressive MP4 Download (Direct in Browser, via a streaming api supported by server)"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["A single ",(0,r.jsx)(i.code,{children:".mp4"})," file is streamed via HTTP."]}),"\n",(0,r.jsx)(i.li,{children:"Browsers like Chrome or Safari can start playback once enough is buffered."}),"\n",(0,r.jsx)(i.li,{children:"Doesn\u2019t require special manifests."}),"\n",(0,r.jsx)(i.li,{children:"Supports basic seeking (if moov atom is early)."}),"\n",(0,r.jsx)(i.li,{children:"No adaptive bitrate or chunk control."}),"\n"]}),"\n",(0,r.jsx)(i.h4,{id:"bonus-streaming-api-in-python-to-support-progressive-mp4-playback",children:"Bonus: Streaming API In Python to Support Progressive MP4 Playback"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-js",metastring:"reference",children:"https://github.com/liviaerxin/hello-python/blob/main/fastapi_streaming.py\n"})}),"\n",(0,r.jsx)(i.h3,{id:"playback-comparison",children:"Playback Comparison"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Feature"}),(0,r.jsx)(i.th,{children:"MP4 Progressive"}),(0,r.jsx)(i.th,{children:"HLS/DASH Chunk Streaming"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"File Format"}),(0,r.jsxs)(i.td,{children:["Single ",(0,r.jsx)(i.code,{children:".mp4"})]}),(0,r.jsxs)(i.td,{children:["Multiple ",(0,r.jsx)(i.code,{children:".ts"})," or ",(0,r.jsx)(i.code,{children:".mp4"})," chunks"]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Requires Manifest"}),(0,r.jsx)(i.td,{children:"\u274c No"}),(0,r.jsxs)(i.td,{children:["\u2705 Yes (",(0,r.jsx)(i.code,{children:".m3u8"})," / ",(0,r.jsx)(i.code,{children:".mpd"}),")"]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Native Browser Support"}),(0,r.jsx)(i.td,{children:"\u2705 Yes (Chrome, etc.)"}),(0,r.jsx)(i.td,{children:"\u274c (except Safari for HLS)"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Adaptive Bitrate"}),(0,r.jsx)(i.td,{children:"\u274c No"}),(0,r.jsx)(i.td,{children:"\u2705 Yes"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Low-Latency Live Support"}),(0,r.jsx)(i.td,{children:"\u274c Limited"}),(0,r.jsx)(i.td,{children:"\u2705 Yes"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"JS Player Required"}),(0,r.jsx)(i.td,{children:"\u274c No"}),(0,r.jsx)(i.td,{children:"\u2705 Usually"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Suitable for Long VOD"}),(0,r.jsx)(i.td,{children:"\u26a0\ufe0f Not ideal"}),(0,r.jsx)(i.td,{children:"\u2705 Excellent"})]})]})]}),"\n",(0,r.jsx)(i.p,{children:"When to Use Which,"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"MP4 Progressive"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Small or simple videos"}),"\n",(0,r.jsx)(i.li,{children:"Static content without network adaptation needs"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"HLS/DASH"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Live streaming"}),"\n",(0,r.jsx)(i.li,{children:"VOD with varying network conditions"}),"\n",(0,r.jsx)(i.li,{children:"Need for adaptive bitrate"}),"\n",(0,r.jsx)(i.li,{children:"Complex playback control (seeking, DVR, etc.)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://developer.apple.com/streaming/",children:"Apple HLS Documentation"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://dashif.org/",children:"MPEG-DASH Overview"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/video-dev/hls.js/",children:"hls.js GitHub"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://github.com/shaka-project/shaka-player",children:"Shaka Player"})}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>t});var s=n(96540);const r={},l=s.createContext(r);function d(e){const i=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(l.Provider,{value:i},e.children)}}}]);