"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[250],{11215:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var t=n(74848),i=n(28453);const r={foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/self-signed-certificate.mdx"},authors:["frank"],tags:["openssl","certificate","best-practice"],description:"Self Signed Certificate",keywords:["Self Signed Certificate"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2025-02-04T00:00:00.000Z"),draft:!1,enableComments:!0},o="Generate self-signed SSL/TLS certificate for local IP address or local domain",l={id:"how-to-create-self-signed-certificate",title:"Generate self-signed SSL/TLS certificate for local IP address or local domain",description:"Self Signed Certificate",source:"@site/../../docs/how-to-create-self-signed-certificate.mdx",sourceDirName:".",slug:"/how-to-create-self-signed-certificate",permalink:"/docs/how-to-create-self-signed-certificate",draft:!1,unlisted:!1,editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../docs/how-to-create-self-signed-certificate.mdx",tags:[{inline:!0,label:"openssl",permalink:"/docs/tags/openssl"},{inline:!0,label:"certificate",permalink:"/docs/tags/certificate"},{inline:!0,label:"best-practice",permalink:"/docs/tags/best-practice"}],version:"current",lastUpdatedBy:"liviaerxin",lastUpdatedAt:1744924444e3,frontMatter:{foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/self-signed-certificate.mdx"},authors:["frank"],tags:["openssl","certificate","best-practice"],description:"Self Signed Certificate",keywords:["Self Signed Certificate"],image:"https://i.imgur.com/mErPwqL.png",date:"2025-02-04T00:00:00.000Z",draft:!1,enableComments:!0},sidebar:"docs",previous:{title:"Hello from Docusaurus",permalink:"/docs/doc-with-tags"},next:{title:"How to intercept HTTPs traffic from Android Emulator",permalink:"/docs/how-to-intercept-https-traffic-from-android-emulator"}},c={},a=[{value:"1. Create a local CA",id:"1-create-a-local-ca",level:2},{value:"2. Create a signed certificate for the local server",id:"2-create-a-signed-certificate-for-the-local-server",level:2},{value:"2.1. Generate the server&#39;s CSR",id:"21-generate-the-servers-csr",level:3},{value:"2.2. Sign the CSR with the local CA",id:"22-sign-the-csr-with-the-local-ca",level:3},{value:"3. Use the signed certificate in the local server",id:"3-use-the-signed-certificate-in-the-local-server",level:2},{value:"4. Install the local CA",id:"4-install-the-local-ca",level:2},{value:"[Optional] Sign the CSR with <code>openssl ca</code>",id:"optional-sign-the-csr-with-openssl-ca",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Chrome <strong>red</strong> security warning",id:"chrome-red-security-warning",level:3},{value:"Resources",id:"resources",level:2}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"generate-self-signed-ssltls-certificate-for-local-ip-address-or-local-domain",children:"Generate self-signed SSL/TLS certificate for local IP address or local domain"}),"\n",(0,t.jsxs)(s.p,{children:["In real life, when we build our website and make it public, some paid or free ",(0,t.jsx)(s.strong,{children:"Certificate Authority"})," (",(0,t.jsx)(s.strong,{children:"CA"}),") will help us sign a certificate for our website ",(0,t.jsx)(s.strong,{children:"domain"})," (IP address is not acceptable!) and enable ",(0,t.jsx)(s.strong,{children:"SSL/TLS"})," connections from user browser to our server."]}),"\n",(0,t.jsxs)(s.p,{children:["Given the secure reasons, the browser will only admit those servers's certificates signed from the authorized ",(0,t.jsx)(s.strong,{children:"CA"}),", and the ",(0,t.jsx)(s.strong,{children:"CA"})," certificate is kept in our host ",(0,t.jsx)(s.strong,{children:"system trust store"}),". In Linux, you can view the ",(0,t.jsx)(s.strong,{children:"CA"})," certificate file like ",(0,t.jsx)(s.code,{children:"/etc/ssl/certs/ca-certificates.crt"}),"."]}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["One of the most popular Certificate Authorities is ",(0,t.jsx)(s.a,{href:"https://letsencrypt.org/",children:"Let's Encrypt"}),", which is a free and non-profit CA."]})}),"\n",(0,t.jsxs)(s.p,{children:["However, in many internal networks and development environments, we often need ",(0,t.jsx)(s.strong,{children:"self-signed certificate"})," more frequently."]}),"\n",(0,t.jsxs)(s.p,{children:["Here is an example, we will generate a ",(0,t.jsx)(s.strong,{children:"local server certificate"})," that is signed by a ",(0,t.jsx)(s.strong,{children:"local CA"}),". Finally, let Chrome can visit our local website without security warning."]}),"\n",(0,t.jsx)(s.p,{children:"In brief, these steps we need to sign local sever certificate actually simulate how those CA sign certificates for public servers, as following:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["Create a local ",(0,t.jsx)(s.strong,{children:"Root CA"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Create a ",(0,t.jsx)(s.strong,{children:"CSR"}),"(Certificate Signing Request) file for local server ",(0,t.jsx)(s.code,{children:"127.0.0.1"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["The local ",(0,t.jsx)(s.strong,{children:"Root CA"})," use the local server ",(0,t.jsx)(s.code,{children:"127.0.0.1"})," ",(0,t.jsx)(s.strong,{children:"CSR"})," to generate a ",(0,t.jsx)(s.strong,{children:"certificate"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Install the local ",(0,t.jsx)(s.strong,{children:"Root CA"})," into our system(Windows, Ubuntu or macOS) trust store."]}),"\n",(0,t.jsxs)(s.li,{children:["Run a simple ",(0,t.jsx)(s.strong,{children:"https"})," server to test local server ",(0,t.jsx)(s.strong,{children:"certificate"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["For those official CA, they have to validate the domain is owned by the server before the ",(0,t.jsx)(s.code,{children:"step 3"}),", and we can ignore ",(0,t.jsx)(s.code,{children:"step 4"})," as they are already installed into the system or the browser trust store."]}),"\n",(0,t.jsxs)(s.p,{children:["And there is nice picture from ",(0,t.jsx)(s.a,{href:"https://www.linkedin.com/pulse/how-create-your-own-self-signed-root-certificate-shankar-gomare/",children:"How to create your own self-signed root Certificate Authority(CA)"})," to show the relationship between ",(0,t.jsx)(s.code,{children:"CA"}),", ",(0,t.jsx)(s.code,{children:"server"})," and ",(0,t.jsx)(s.code,{children:"browser"}),"."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:"https://media.licdn.com/dms/image/C4E12AQGJ5hl3wTAyFg/article-inline_image-shrink_400_744/0/1589170084171?e=1701907200&v=beta&t=FaVSM-fIy4dc-SIftGYEuUc7GONcMLphssfteUKoWuA",alt:""})}),"\n",(0,t.jsx)(s.h2,{id:"1-create-a-local-ca",children:"1. Create a local CA"}),"\n",(0,t.jsxs)(s.p,{children:["Generate a file ",(0,t.jsx)(s.code,{children:"RootCA.key"})," and a file ",(0,t.jsx)(s.code,{children:"RootCA.crt"})," of our local root ",(0,t.jsx)(s.strong,{children:"CA"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:'openssl req -x509 -nodes -new -sha256 -days 1024 -newkey rsa:2048 -keyout RootCA.key -out RootCA.crt -subj "/C=US/CN=Example-Root-CA"\n'})}),"\n",(0,t.jsxs)(s.p,{children:["You can change ",(0,t.jsx)(s.code,{children:"Example-Root-CA"})," to others or add more fields to CA."]}),"\n",(0,t.jsx)(s.p,{children:"[Optional] Create a CA with a configuration file,"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl req -x509 -nodes -new -keyout RootCA.key -out RootCA.crt -config <(cat <<EOF\n[ req ]\ndefault_bits       = 2048\ndefault_md         = sha256\ndefault_days       = 3650\nprompt             = no\ndistinguished_name = req_distinguished_name\n\n[ req_distinguished_name ]\nC  = US\nST = California\nL  = San Francisco\nO  = Example Corp\nOU = IT Department\nCN = www.example.com\nemailAddress = admin@example.com\nEOF\n)\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"process substitution"})," does not work in bash scripts!"]})}),"\n",(0,t.jsx)(s.h2,{id:"2-create-a-signed-certificate-for-the-local-server",children:"2. Create a signed certificate for the local server"}),"\n",(0,t.jsxs)(s.p,{children:["Next, we should apply the local ",(0,t.jsx)(s.strong,{children:"CA"})," to sign a ",(0,t.jsx)(s.strong,{children:"certificate"})," for our local server using the server's ",(0,t.jsx)(s.strong,{children:"Certificate Signing Request"})," (",(0,t.jsx)(s.strong,{children:"CSR"}),")\n, which will be accessed through the ",(0,t.jsx)(s.code,{children:"localhost"})," or ",(0,t.jsx)(s.code,{children:"127.0.0.1"})," from our local machine."]}),"\n",(0,t.jsx)(s.h3,{id:"21-generate-the-servers-csr",children:"2.1. Generate the server's CSR"}),"\n",(0,t.jsxs)(s.p,{children:["When generating the ",(0,t.jsx)(s.strong,{children:"CSR"})," file with OpenSSL, we can either specify certain details directly in the command line or use a configuration file. While you can provide some information via command-line arguments, complex configurations like specifying ",(0,t.jsx)(s.code,{children:"[v3_req]"})," and ",(0,t.jsx)(s.code,{children:"[alt_names]"})," in belowing are typically done through a configuration file."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"subjectAltName"})," in ",(0,t.jsx)(s.code,{children:"[v3_req]"})," will let you specify more than domain/IP addresses as ",(0,t.jsx)(s.strong,{children:"Subject Alternative Names"})," (",(0,t.jsx)(s.strong,{children:"SANs"}),"). And now modern browser require the server certificate to include ",(0,t.jsx)(s.strong,{children:"SANs"}),". Usage of the ",(0,t.jsx)(s.strong,{children:"Common Name"})," (",(0,t.jsx)(s.strong,{children:"CN"}),") alone is not considered secure enough, and omitting ",(0,t.jsx)(s.strong,{children:"SANs"})," may result a certificate validation error!"]}),"\n",(0,t.jsxs)(s.p,{children:["Here is an example for using pure arguments to specify ",(0,t.jsx)(s.code,{children:"-subj"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:'openssl req -new -newkey rsa:2048 -nodes -keyout privkey.pem -out csr.pem -subj "/C=US/ST=California/L=San Francisco/O=Example Corp/OU=IT Department/CN=www.example.com/emailAddress=admin@example.com"\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Here is an example to use the configuration file as ",(0,t.jsx)(s.code,{children:"-config"}),"."]}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["[Optional] Customize DNS by editing ",(0,t.jsx)(s.code,{children:"/etc/hosts"})," (Other machines also have to do this if they would like to visit the server),"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-conf",metastring:'title="/etc/hosts"',children:"127.0.0.1   localhost\n127.0.0.1   fake1.local\n127.0.0.1   fake2.local\n"})}),"\n",(0,t.jsxs)(s.ol,{start:"2",children:["\n",(0,t.jsxs)(s.li,{children:["Create a configure file for ",(0,t.jsx)(s.strong,{children:"CSR"})," including typical sections as:"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-conf",metastring:'title="localhost.conf"',children:"[req]\ndefault_bits  = 2048\ndistinguished_name = req_distinguished_name\nreq_extensions = v3_req\nprompt = no\n\n[req_distinguished_name]\ncountryName = XX\nstateOrProvinceName = N/A\nlocalityName = N/A\norganizationName = Self-signed certificate\ncommonName = 127.0.0.1: Self-signed certificate\n\n[v3_req]\nsubjectAltName = @alt_names\n\n[alt_names]\nIP.1 = 127.0.0.1\nDNS.1 = localhost\nDNS.2 = fake1.local\nDNS.3 = fake2.local\n"})}),"\n",(0,t.jsxs)(s.ol,{start:"3",children:["\n",(0,t.jsxs)(s.li,{children:["Generates the ",(0,t.jsx)(s.strong,{children:"CSR"})]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["To generate a ",(0,t.jsx)(s.strong,{children:"CSR"})," using the configuration file with OpenSSL, you can use the following command:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl req -new -nodes -keyout localhost.key -out localhost.csr -config localhost.conf\n"})}),"\n",(0,t.jsxs)(s.p,{children:["[Optional] mix ",(0,t.jsx)(s.code,{children:"-subj"})," and ",(0,t.jsx)(s.code,{children:"-config"}),", to be short like:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:'SAN_LIST="[SAN]\\nsubjectAltName=DNS:localhost, DNS:*.localhost, IP:127.0.0.1"\nopenssl req -new -nodes -newkey rsa:2048 -keyout localhost.key -out localhost.csr -subj "/C=US/ST=YourState/L=YourCity/O=Example CORP/CN=localhost.local" -reqexts SAN -config <(echo -e "$SAN_LIST")\n'})}),"\n",(0,t.jsxs)(s.p,{children:["Here, ",(0,t.jsx)(s.code,{children:"localhost.conf"})," is the configuration file and the two outputs are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"localhost.key"})," is the private key file for the local server to communicate with the clients securely."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"localhost.csr"})," is the ",(0,t.jsx)(s.strong,{children:"CSR"})," file that the local server will use in the next step to sign its certificate from the local CA."]}),"\n"]}),"\n",(0,t.jsxs)(s.ol,{start:"4",children:["\n",(0,t.jsxs)(s.li,{children:["Verify the ",(0,t.jsx)(s.strong,{children:"CSR"})," file ",(0,t.jsx)(s.code,{children:"localhost.csr"}),":"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl req -text -noout -verify -in localhost.csr\n"})}),"\n",(0,t.jsx)(s.h3,{id:"22-sign-the-csr-with-the-local-ca",children:"2.2. Sign the CSR with the local CA"}),"\n",(0,t.jsxs)(s.p,{children:["Now, it's time for ",(0,t.jsx)(s.strong,{children:"local CA"})," to sign a certificate for our local server by using the server's ",(0,t.jsx)(s.strong,{children:"CSR"})," ",(0,t.jsx)(s.code,{children:"localhost.csr"})," file, thereby issuing a signed certificate."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Generates ",(0,t.jsx)(s.code,{children:"localhost.crt"})," by using CSR ",(0,t.jsx)(s.code,{children:"localhost.csr"}),","]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl x509 -req -sha256 -days 1024 -in localhost.csr -CA RootCA.crt -CAkey RootCA.key -CAcreateserial -extensions v3_req -extfile localhost.conf -out localhost.crt\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"-extensions v3_req -extfile localhost.conf"}),": ",(0,t.jsx)(s.code,{children:"openssl x509"})," will contain ",(0,t.jsx)(s.code,{children:"subjectAltName"})," extension in the certificate."]})}),"\n",(0,t.jsx)(s.admonition,{type:"warning",children:(0,t.jsxs)(s.p,{children:["If ",(0,t.jsx)(s.code,{children:"X509"})," extensions(",(0,t.jsx)(s.code,{children:"subjectAltName"}),") are missing from the certificate, the browser will still report security issues, such as ",(0,t.jsx)(s.strong,{children:"its security certificate does not specify Subject Alternative Names."})]})}),"\n",(0,t.jsxs)(s.p,{children:["Or after ",(0,t.jsx)(s.strong,{children:"OpenSSL v3"}),", you can copy the extensions specified in the ",(0,t.jsx)(s.strong,{children:"CSR"})," to the certificate by ",(0,t.jsx)(s.code,{children:"openssl x509"})," as this:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl x509 -req -sha256 -days 1024 -in localhost.csr -CA RootCA.crt -CAkey RootCA.key -CAcreateserial -copy_extensions copyall -out localhost.crt\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["View the generated ",(0,t.jsx)(s.code,{children:"localhost.crt"}),":"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl x509 -text -noout -in localhost.crt\n"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Verify the generated",(0,t.jsx)(s.code,{children:"localhost.crt"}),":"]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl verify -verbose -CAfile RootCA.crt localhost.crt\n"})}),"\n",(0,t.jsxs)(s.admonition,{type:"note",children:[(0,t.jsx)(s.p,{children:"If the CA and Subject are the same one, the step of creating the local CA can be skipped."}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout localhost.key -out localhost.crt -config localhost.conf\n"})})]}),"\n",(0,t.jsx)(s.h2,{id:"3-use-the-signed-certificate-in-the-local-server",children:"3. Use the signed certificate in the local server"}),"\n",(0,t.jsxs)(s.p,{children:["Run up a node https server to use the ",(0,t.jsx)(s.strong,{children:"signed certificate"})," for the local sever."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"npx http-server -p 8082 --ssl --cert localhost.crt --key localhost.key\n"})}),"\n",(0,t.jsx)(s.p,{children:"Then visit:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://127.0.0.1:8082/",children:"https://127.0.0.1:8082/"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://localhost:8082/",children:"https://localhost:8082/"})}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The browser will give you security warning as the local ",(0,t.jsx)(s.strong,{children:"root CA"})," is not trusted in default."]}),"\n",(0,t.jsx)(s.h2,{id:"4-install-the-local-ca",children:"4. Install the local CA"}),"\n",(0,t.jsxs)(s.p,{children:["TO trust the root ",(0,t.jsx)(s.strong,{children:"local CA"}),", we must install the ",(0,t.jsx)(s.strong,{children:"local CA"})," certificate ",(0,t.jsx)(s.code,{children:"RootCA.crt"})," into each system ",(0,t.jsx)(s.strong,{children:"trust store"})," or each browser."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Windows system trust store"}),"\n",(0,t.jsx)(s.li,{children:"Ubuntu system trust store"}),"\n",(0,t.jsx)(s.li,{children:"macOS system trust store"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Then visit again, the browser will show green!"}),"\n",(0,t.jsxs)(s.h2,{id:"optional-sign-the-csr-with-openssl-ca",children:["[Optional] Sign the CSR with ",(0,t.jsx)(s.code,{children:"openssl ca"})]}),"\n",(0,t.jsxs)(s.p,{children:["For complicated configuration for CA to sign a certificate, you can use ",(0,t.jsx)(s.code,{children:"openssl ca"})," and the configuration file is like:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"cd /path/to/your/ca/\nmkdir -p newcerts\ntouch index.txt\necho 1000 > serial\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:'cat <<EOF > /path/to/your/ca/openssl.cnf\n[ ca ]\ndefault_ca = CA_default\n\n[ CA_default ]\ndir               = /path/to/your/ca\ndatabase          = $dir/index.txt\nnew_certs_dir     = $dir/newcerts\ncertificate       = $dir/RootCA.crt\nserial            = $dir/serial\nprivate_key       = $dir/RootCA.key\ndefault_days      = 365\ndefault_md        = sha256\npolicy            = policy_any\nx509_extensions   = usr_cert\ncopy_extensions   = copy\n\n[ policy_any ]\ncountryName             = supplied\nstateOrProvinceName     = supplied\norganizationName        = supplied\norganizationalUnitName  = optional\ncommonName              = supplied\nemailAddress            = optional\n\n[ usr_cert ]\nbasicConstraints=CA:FALSE\nnsCertType = client, email\nnsComment = "OpenSSL Generated Certificate"\nsubjectKeyIdentifier=hash\nauthorityKeyIdentifier=keyid,issuer\nEOF\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sh",children:"openssl ca -config /path/to/your/ca/openssl.cnf -in localhost.csr -out localhost.crt -batch\n"})}),"\n",(0,t.jsx)(s.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(s.h3,{id:"chrome-red-security-warning",children:["Chrome ",(0,t.jsx)(s.strong,{children:"red"})," security warning"]}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["Go to ",(0,t.jsx)(s.code,{children:"Developer Tools"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Click ",(0,t.jsx)(s.code,{children:"Security"})," tab."]}),"\n",(0,t.jsxs)(s.li,{children:["Check ",(0,t.jsx)(s.code,{children:"Security overview"})," issues."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"resources",children:"Resources"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://gist.github.com/cecilemuller/9492b848eb8fe46d462abeb26656c4f8",children:"How to create an HTTPS certificate for localhost domains \xb7 GitHub"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://www.golinuxcloud.com/add-x509-extensions-to-certificate-openssl/",children:"How to add X.509 extensions to certificate OpenSSL | GoLinuxCloud"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://github.com/FiloSottile/mkcert",children:"GitHub - FiloSottile/mkcert: A simple zero-config tool to make locally trusted development certificates with any names you'd like."})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(96540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);