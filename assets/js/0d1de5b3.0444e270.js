"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[723],{2625:e=>{e.exports=JSON.parse('{"permalink":"/blog/ffmpeg-on-cuda-container","editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/docs/practice/../../blog/ffmpeg-on-cuda-container.mdx","source":"@site/../../blog/ffmpeg-on-cuda-container.mdx","title":"Installing FFmpeg on Nvidia CUDA container","description":"FFmpeg on CUDA Container","date":"2024-09-06T00:00:00.000Z","tags":[{"inline":true,"label":"ffmpeg","permalink":"/blog/tags/ffmpeg"},{"inline":true,"label":"docker","permalink":"/blog/tags/docker"},{"inline":true,"label":"cuda","permalink":"/blog/tags/cuda"}],"readingTime":1.64,"hasTruncateMarker":true,"authors":[{"name":"Frank Chen","title":"Backend & Applied ML Engineer","url":"https://github.com/liviaerxin","imageURL":"https://github.com/liviaerxin.png","key":"frank","page":null}],"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/ffmpeg-on-cuda-container.mdx"},"authors":["frank"],"tags":["ffmpeg","docker","cuda"],"description":"FFmpeg on CUDA Container","keywords":["FFmpeg on CUDA Container"],"image":"https://i.imgur.com/mErPwqL.png","date":"2024-09-06T00:00:00.000Z","draft":false,"enableComments":true},"unlisted":false,"prevItem":{"title":"Exploring cross compilation: ARM on x86_64","permalink":"/blog/how-to-cross-compilation"},"nextItem":{"title":"Making your own Dotfiles for your sake","permalink":"/blog/how-to-dotfiles"}}')},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(96540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},73392:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});var t=i(2625),r=i(74848),s=i(28453);const o={foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/ffmpeg-on-cuda-container.mdx"},authors:["frank"],tags:["ffmpeg","docker","cuda"],description:"FFmpeg on CUDA Container",keywords:["FFmpeg on CUDA Container"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2024-09-06T00:00:00.000Z"),draft:!1,enableComments:!0},a="Installing FFmpeg on Nvidia CUDA container",c={authorsImageUrls:[void 0]},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step by Step",id:"step-by-step",level:2},{value:"Complete Dockerfile",id:"complete-dockerfile",level:2},{value:"Known issues",id:"known-issues",level:2},{value:"References",id:"references",level:2}];function l(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["This documentation describes to install ",(0,r.jsx)(n.code,{children:"FFmpeg"})," on ",(0,r.jsx)(n.code,{children:"nvidia/cuda"})," ",(0,r.jsx)(n.strong,{children:"container"})," to use the ",(0,r.jsx)(n.strong,{children:"Nvidia GPU"})," to accelerate encoding."]}),"\n",(0,r.jsxs)(n.p,{children:["If you want to know ",(0,r.jsx)(n.a,{href:"https://www.cyberciti.biz/faq/how-to-install-ffmpeg-with-nvidia-gpu-acceleration-on-linux/",children:"how to install FFmpeg with NVIDIA GPU on Linux"}),", go to see that."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"FFmpeg"})," can support hardware-based decoding and encoding for Nvidia GPU card. With the help of Nvidia GPU, ",(0,r.jsx)(n.code,{children:"h264_nvenc"})," can lead encoding speed with ",(0,r.jsx)(n.strong,{children:"5x"})," faster than ",(0,r.jsx)(n.code,{children:"libx264"})," in ",(0,r.jsx)(n.strong,{children:"GTX1080"})," card."]}),"\n",(0,r.jsxs)(n.p,{children:["Let's see how to install everything one by one on the ",(0,r.jsx)(n.strong,{children:"Nvidia CUDA Docker"})," container ",(0,r.jsx)(n.code,{children:"nvidia/cuda:12.2.0-devel-ubuntu20.04"}),", in which CUDA toolkit and GPU driver are already included."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["It must use ",(0,r.jsx)(n.code,{children:"nvidia/cuda:xxx-devel-xxx"})," image to build ",(0,r.jsx)(n.code,{children:"FFmpeg"}),", because the ",(0,r.jsx)(n.code,{children:"dev"})," image contain all the necessary libraries."]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.p,{children:["Make sure ",(0,r.jsx)(n.strong,{children:"Nvidia GPU Driver"})," is installed in your host machine! As it will be mounted into the ",(0,r.jsx)(n.strong,{children:"container"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"ldconfig"})," to check if the required Nvidia GPU driver libraries are available inside the container. Such as,"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"ldconfig -p | grep libcuda\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["When running in the ",(0,r.jsx)(n.code,{children:"nvidia/cuda"})," Docker container, what Nvidia libraries(from the host machine) should be mounted inside the container are specified by the ",(0,r.jsx)(n.code,{children:"NVIDIA_DRIVER_CAPABILITIES"})," env variable, see ",(0,r.jsx)(n.a,{href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/docker-specialized.html#driver-capabilities",children:"driver-capabilities"}),". Here for ",(0,r.jsx)(n.code,{children:"FFmpeg"})," to employ GPU, it should be included at least as ",(0,r.jsx)(n.code,{children:"NVIDIA_DRIVER_CAPABILITIES=video,utility"}),"."]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"step-by-step",children:"Step by Step"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --rm --runtime=nvidia \\\n    -e NVIDIA_VISIBLE_DEVICES=all \\\n    -e NVIDIA_DRIVER_CAPABILITIES=compute,utility \\\n    nvidia/cuda nvidia-smi\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --rm --runtime=nvidia \\\n    -e NVIDIA_VISIBLE_DEVICES=all \\\n    -e NVIDIA_DRIVER_CAPABILITIES=compute,utility \\\n    nvidia/cuda bash\n"})}),"\n",(0,r.jsx)(n.h2,{id:"complete-dockerfile",children:"Complete Dockerfile"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:"reference",children:"https://github.com/liviaerxin/hello-dockerfile/blob/main/nvidia-cuda-ffmpeg/Dockerfile\n"})}),"\n",(0,r.jsx)(n.h2,{id:"known-issues",children:"Known issues"}),"\n",(0,r.jsxs)(n.p,{children:["Nvidia Docker encoding stops after long running time with such error message: ",(0,r.jsx)(n.code,{children:"CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/jellyfin/jellyfin/issues/9287",children:"[Issue]: NVidia Docker transcoding randomly stops working after 5 minutes to 4 hours later. \xb7 Issue #9287 \xb7 jellyfin/jellyfin \xb7 GitHub"})}),"\n",(0,r.jsx)(n.p,{children:"Possible solution:"}),"\n",(0,r.jsxs)(n.p,{children:["Edit ",(0,r.jsx)(n.code,{children:"/etc/defautls/grub"}),","]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash systemd.unified_cgroup_hierarchy=0"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Then run ",(0,r.jsx)(n.code,{children:"update-grub"})," and reboot."]}),"\n",(0,r.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.nvidia.com/video-technologies/video-codec-sdk/12.0/ffmpeg-with-nvidia-gpu/index.html",children:"Using FFmpeg with NVIDIA GPU Hardware Acceleration - NVIDIA Docs"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://developer.nvidia.com/blog/nvidia-ffmpeg-transcoding-guide/",children:"NVIDIA FFmpeg Transcoding Guide | NVIDIA Technical Blog"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/user-guide.html",children:"User Guide \u2014 container-toolkit 1.13.5 documentation"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"../wiki/wiki-cuda.mdx",children:"wiki cuda"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);