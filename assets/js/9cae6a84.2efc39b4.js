"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1338],{28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>n});var s=a(96540);const l={},r=s.createContext(l);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(r.Provider,{value:t},e.children)}},95588:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>n,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"practice/resumable-upload","title":"Resumable Upload","description":"Resumable Upload","source":"@site/../../docs/practice/resumable-upload.md","sourceDirName":"practice","slug":"/practice/resumable-upload","permalink":"/docs/practice/resumable-upload","draft":false,"unlisted":false,"editUrl":"https://github.com/liviaerxin/liviaerxin.github.io/edit/main/docs/../../docs/practice/resumable-upload.md","tags":[{"inline":true,"label":"fastapi","permalink":"/docs/tags/fastapi"},{"inline":true,"label":"backend","permalink":"/docs/tags/backend"},{"inline":true,"label":"protocol","permalink":"/docs/tags/protocol"},{"inline":true,"label":"tus","permalink":"/docs/tags/tus"}],"version":"current","lastUpdatedBy":"liviaerxin","lastUpdatedAt":1746850681000,"frontMatter":{"foam_template":{"name":"Blog Docusaurus Template","description":"Creates Docusaurus blog/slip","filepath":"blog/resumable-upload.md"},"authors":["frank"],"tags":["fastapi","backend","protocol","tus"],"description":"Resumable Upload","keywords":["file upload","resumable"],"image":"https://i.imgur.com/mErPwqL.png","date":"2023-07-07T00:00:00.000Z","draft":false,"enableComments":true},"sidebar":"docs","previous":{"title":"REST API Filtering, Sorting and Pagination","permalink":"/docs/practice/rest-api-filtering-sorting-pagination"},"next":{"title":"RPC vs MQ","permalink":"/docs/practice/rpc_vs_mq"}}');var l=a(74848),r=a(28453);const i={foam_template:{name:"Blog Docusaurus Template",description:"Creates Docusaurus blog/slip",filepath:"blog/resumable-upload.md"},authors:["frank"],tags:["fastapi","backend","protocol","tus"],description:"Resumable Upload",keywords:["file upload","resumable"],image:"https://i.imgur.com/mErPwqL.png",date:new Date("2023-07-07T00:00:00.000Z"),draft:!1,enableComments:!0},n="Resumable Upload",o={},c=[{value:"A Basic Resumable Upload",id:"a-basic-resumable-upload",level:2},{value:"TUS Resumable Upload",id:"tus-resumable-upload",level:2}];function p(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"resumable-upload",children:"Resumable Upload"})}),"\n",(0,l.jsx)(t.p,{children:"To implement a resumable file upload, it is necessary to contain three parts:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"Protocol: provide a mechanism for resumable file uploads"}),"\n",(0,l.jsx)(t.li,{children:"Upload Server: receive an interrupted upload and store it in local machine or in cloud storage"}),"\n",(0,l.jsx)(t.li,{children:"Upload Client: upload the file which may be interrupted"}),"\n"]}),"\n",(0,l.jsx)(t.h2,{id:"a-basic-resumable-upload",children:"A Basic Resumable Upload"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",metastring:"reference",children:"https://github.com/liviaerxin/hello-python/blob/main/fastapi_resumable_upload.py\n"})}),"\n",(0,l.jsx)(t.h2,{id:"tus-resumable-upload",children:"TUS Resumable Upload"}),"\n",(0,l.jsx)(t.p,{children:"FastAPI implementing tus v1.0.0 server in Python"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-js",metastring:"reference",children:"https://github.com/liviaerxin/hello-python/blob/main/fastapi_tusd.py\n"})}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"https://tus.io/implementations",children:"Implementations | tus.io"})}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"https://javascript.info/resume-upload",children:"Resumable file upload"})}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"https://github.com/tus/tus-js-client",children:"GitHub - tus/tus-js-client: A pure JavaScript client for the tus resumable upload protocol"})}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"https://github.com/tus/tusd",children:"GitHub - tus/tusd: Reference server implementation in Go of tus: the open protocol for resumable file uploads"})}),"\n",(0,l.jsx)(t.p,{children:"IO, StreamIO, FileIO"}),"\n",(0,l.jsx)(t.p,{children:"high-level used by asyncio.io in socket/tcp/http"}),"\n",(0,l.jsx)(t.p,{children:(0,l.jsx)(t.a,{href:"https://docs.python.org/3/library/asyncio-stream.html#streamreader",children:"Streams \u2014 Python 3.11.4 documentation"})}),"\n",(0,l.jsx)(t.p,{children:"starlette.Request.stream = http Request Body"}),"\n",(0,l.jsxs)(t.p,{children:["low-level:",(0,l.jsx)(t.br,{}),"\n",(0,l.jsx)(t.a,{href:"https://docs.python.org/3/library/io.html#io.RawIOBase",children:"io \u2014 Core tools for working with streams \u2014 Python 3.11.4 documentation"})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}}}]);