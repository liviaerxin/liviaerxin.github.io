"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[937],{55302:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>l});var d=a(74848),r=a(28453);const s={foam_template:{name:"Docs Docusaurus Template",description:"Creates Docusaurus docs/slip",filepath:"docs/wiki-ffmpeg.md"},authors:["frank"],description:"Setup Intel VROC RAID on Ubuntu",keywords:["Setup Intel VROC RAID on Ubuntu"],image:"https://i.imgur.com/mErPwqL.png",tags:["intel vroc","raid","ubuntu","best practice"],date:new Date("2023-08-29T00:00:00.000Z")},i="Intel VROC RAID on Ubuntu",t={id:"raid-intel-vroc",title:"Intel VROC RAID on Ubuntu",description:"Setup Intel VROC RAID on Ubuntu",source:"@site/../../docs/raid-intel-vroc.mdx",sourceDirName:".",slug:"/raid-intel-vroc",permalink:"/docs/raid-intel-vroc",draft:!1,unlisted:!1,editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../docs/raid-intel-vroc.mdx",tags:[{inline:!0,label:"intel vroc",permalink:"/docs/tags/intel-vroc"},{inline:!0,label:"raid",permalink:"/docs/tags/raid"},{inline:!0,label:"ubuntu",permalink:"/docs/tags/ubuntu"},{inline:!0,label:"best practice",permalink:"/docs/tags/best-practice"}],version:"current",lastUpdatedBy:"liviaerxin",lastUpdatedAt:1744661848e3,frontMatter:{foam_template:{name:"Docs Docusaurus Template",description:"Creates Docusaurus docs/slip",filepath:"docs/wiki-ffmpeg.md"},authors:["frank"],description:"Setup Intel VROC RAID on Ubuntu",keywords:["Setup Intel VROC RAID on Ubuntu"],image:"https://i.imgur.com/mErPwqL.png",tags:["intel vroc","raid","ubuntu","best practice"],date:"2023-08-29T00:00:00.000Z"},sidebar:"docs",previous:{title:"QEMU Emulate Raspberry Pi 3 and 4",permalink:"/docs/qemu-raspberry-pi"},next:{title:"RAID on Ubuntu",permalink:"/docs/raid-on-ubuntu"}},o={},l=[{value:"Background",id:"background",level:2},{value:"Set up RAID 5 array",id:"set-up-raid-5-array",level:2},{value:"Create RAID array",id:"create-raid-array",level:3},{value:"Mount the RAID array for use",id:"mount-the-raid-array-for-use",level:3},{value:"Save RAID array configuration",id:"save-raid-array-configuration",level:3},{value:"Remove RAID Array",id:"remove-raid-array",level:2},{value:"[Optional] Umount the array from filesystem",id:"optional-umount-the-array-from-filesystem",level:3},{value:"Stop RAID container and array",id:"stop-raid-container-and-array",level:3},{value:"Removes the RAID metadata",id:"removes-the-raid-metadata",level:3},{value:"[Optional] Remove RAID configuration",id:"optional-remove-raid-configuration",level:3},{value:"Manage RAID Array with mdadm",id:"manage-raid-array-with-mdadm",level:2},{value:"Find all RAID arrays",id:"find-all-raid-arrays",level:3},{value:"Query information on a RAID array",id:"query-information-on-a-raid-array",level:3},{value:"Query information on a physical disk drive",id:"query-information-on-a-physical-disk-drive",level:3},{value:"Stop a RAID array",id:"stop-a-raid-array",level:3},{value:"Starting a RAID Array",id:"starting-a-raid-array",level:3},{value:"Adding spare devices to a RAID Array",id:"adding-spare-devices-to-a-raid-array",level:3},{value:"Delete partition and data in disk",id:"delete-partition-and-data-in-disk",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h1,{id:"intel-vroc-raid-on-ubuntu",children:"Intel VROC RAID on Ubuntu"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"https://www.intel.com/content/dam/support/us/en/documents/memory-and-storage/ssd-software/Linux_VROC_6-0_User_Guide.pdf",children:"Linux VROC User Guide"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"https://www.intel.com/content/dam/support/us/en/documents/memory-and-storage/ssd-software/VROC-Ubuntu-Setup-UserGuide-342787-US.pdf",children:"VROC Ubuntu Setup"})}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["This document will present how to create and manage ",(0,d.jsx)(n.strong,{children:"Intel VROC RAID"})," on Ubuntu with ",(0,d.jsx)(n.code,{children:"mdadm"})," utility(It should also work in other Linux)."]}),"\n",(0,d.jsxs)(n.p,{children:["For setting up ",(0,d.jsx)(n.strong,{children:"Intel VROC RAID"})," on Ubuntu in ",(0,d.jsx)(n.code,{children:"BIOS"}),", go to see ",(0,d.jsx)(n.a,{href:"https://www.intel.com/content/dam/support/us/en/documents/memory-and-storage/ssd-software/VROC-Ubuntu-Setup-UserGuide-342787-US.pdf",children:"VROC Ubuntu Setup"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:["For creating ",(0,d.jsx)(n.strong,{children:"software RAID"})," on Ubuntu, go to see:"]}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"/docs/raid-on-ubuntu",children:"Ubuntu RAID"}),"."]}),"\n",(0,d.jsx)(n.h2,{id:"background",children:"Background"}),"\n",(0,d.jsxs)(n.p,{children:["On the premise machine, there are 2 NVMe SSDs and 8 SATA hard drives(HDDs), and also it ships with a in-box hardware-assisted RAID controller(",(0,d.jsx)(n.strong,{children:"Intel VROC"}),") on the Intel CPU, which is supposed to keep overall advantages over ",(0,d.jsx)(n.strong,{children:"software RAID"}),"."]}),"\n",(0,d.jsxs)(n.p,{children:["For me, I would like to use these 8 HDDs(",(0,d.jsx)(n.code,{children:"sda"}),", ",(0,d.jsx)(n.code,{children:"sdb"}),", ..., ",(0,d.jsx)(n.code,{children:"sdh"}),") to store data for long time, while retaining the balance between redundancy and performance. So here ",(0,d.jsx)(n.strong,{children:"RAID 5"}),"(Stripping with Parity) comes into my mind."]}),"\n",(0,d.jsxs)(n.p,{children:["To leverage the power of ",(0,d.jsx)(n.strong,{children:"Intel VROC"})," in Ubuntu(Linux), you also need the ",(0,d.jsx)(n.code,{children:"mdadm"})," command line tool to manage intel VROC which support RAID 0, RAID 1, RAID 5 and RAID 10"]}),"\n",(0,d.jsxs)(n.admonition,{type:"note",children:[(0,d.jsxs)(n.p,{children:["In my understanding, the intel VROC register in system with the common interface with ",(0,d.jsx)(n.code,{children:"mdadm"}),", so the ",(0,d.jsx)(n.code,{children:"mdadm"})," software can operate it. And running command will show the ",(0,d.jsx)(n.code,{children:"mdadm"})," is using intel VROC,"]}),(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"$ sudo mdadm --detail-platform\n\n       Platform : Intel(R) Virtual RAID on CPU\n        Version : 8.0.3.1002\n    RAID Levels : raid0 raid1 raid10 raid5\n    Chunk Sizes : 4k 8k 16k 32k 64k 128k\n    2TB volumes : supported\n      2TB disks : supported\n      Max Disks : 8\n    Max Volumes : 2 per array, 8 per controller\n I/O Controller : /sys/devices/pci0000:00/0000:00:17.0 (SATA)\n          Port7 : /dev/sdh (ZR909K07)\n          Port6 : /dev/sdg (ZV70BN24)\n          Port3 : /dev/sdd (ZV70BD3T)\n          Port4 : /dev/sde (ZR909Q89)\n          Port1 : /dev/sdb (ZRT0S2FM)\n          Port5 : /dev/sdf (ZR9099MM)\n          Port2 : /dev/sdc (ZR909AGN)\n          Port0 : /dev/sda (ZV70BMH9)\n\n       Platform : Intel(R) Virtual RAID on CPU\n        Version : 8.0.3.1002\n    RAID Levels : raid0 raid1 raid10\n    Chunk Sizes : 4k 8k 16k 32k 64k 128k\n    2TB volumes : supported\n      2TB disks : supported\n      Max Disks : 96\n    Max Volumes : 2 per array, 24 per controller\n 3rd party NVMe : supported\n I/O Controller : /sys/devices/pci0000:8d/0000:8d:00.5 (VMD)\n NVMe under VMD : /dev/nvme0n1 (633FC084FCVK)\n NVMe under VMD : /dev/nvme1n1 (633FC0DEFCVK)\n I/O Controller : /sys/devices/pci0000:6f/0000:6f:00.5 (VMD)\n I/O Controller : /sys/devices/pci0000:51/0000:51:00.5 (VMD)\n"})})]}),"\n",(0,d.jsxs)(n.admonition,{type:"info",children:[(0,d.jsxs)(n.p,{children:["Install Ubuntu Server on RAID:\nUbuntu Server Image has inbox ",(0,d.jsx)(n.code,{children:"mdadm"})," utilities and ",(0,d.jsx)(n.code,{children:"VMD"})," drivers(which enable intel VROC functionalities), so it is quite convenient to create the RAID 1 on 2 SSDs either in BIOS stage(for intel VROC only) or in storage layer step during OS installation stage(software RAID), then install Ubuntu Server OS on the RAID 1."]}),(0,d.jsx)(n.p,{children:"After creating the RAID 1 via intel VROC in BIOS, Ubuntu Server installation can detect the RAID created by VROC in step when set up the storage layer."}),(0,d.jsxs)(n.p,{children:["If you skip BIOS to create RAID during OS installation, remember to add ",(0,d.jsx)(n.code,{children:"-e isms"})," when using ",(0,d.jsx)(n.code,{children:"mdadm"})," to create RAID(you can enter the terminal, do ``) otherwise the RAID is software based and does not apply VROC."]}),(0,d.jsxs)(n.p,{children:["Install Ubuntu Desktop on RAID:\nUbuntu Desk Image does not ship the ",(0,d.jsx)(n.code,{children:"mdadm"})," tool, so it is nearly impossible to create RAID and install Ubuntu Desktop OS on the RAID(however this one ",(0,d.jsx)(n.a,{href:"https://askubuntu.com/questions/1299978/install-ubuntu-20-04-desktop-with-raid-1-and-lvm-on-machine-with-uefi-bios",children:"Install Ubuntu 20.04 desktop with RAID 1 and LVM on machine with UEFI BIOS"})," from stackoverflow seems to be successful)"]})]}),"\n",(0,d.jsx)(n.h2,{id:"set-up-raid-5-array",children:"Set up RAID 5 array"}),"\n",(0,d.jsxs)(n.p,{children:["Here, I use 8 disks: ",(0,d.jsx)(n.code,{children:"/dev/sda"}),", ",(0,d.jsx)(n.code,{children:"/dev/sdb"}),", ..., ",(0,d.jsx)(n.code,{children:"/dev/sdh"})," to create ",(0,d.jsx)(n.strong,{children:"RAID 5"})," array and mount it for use in practice."]}),"\n",(0,d.jsx)(n.h3,{id:"create-raid-array",children:"Create RAID array"}),"\n",(0,d.jsxs)(n.p,{children:["When creating RAID array, ",(0,d.jsx)(n.strong,{children:"Intel VROC"})," is different with ",(0,d.jsx)(n.strong,{children:"software RAID"})," array creation as an additional container is needed to create firstly. Inside the container, some information is labelled into the drives for Intel VROC controller to recognize them."]}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:"Create RAID Container with Intel IMSM Metadata"}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["the total number of drives is 8 and ",(0,d.jsx)(n.code,{children:"-e imsm"}),"."]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mdadm --create /dev/md/imsm0 /dev/sd[a-h] -n 8 -e imsm\n"})}),"\n",(0,d.jsxs)(n.ol,{start:"2",children:["\n",(0,d.jsxs)(n.li,{children:["Then, Create a RAID array in the ",(0,d.jsx)(n.code,{children:"/dev/md/imsm0"})," container using total 8 drives with ",(0,d.jsx)(n.strong,{children:"RAID 5"}),"."]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mdadm --create /dev/md/md0 /dev/md/imsm0 -l 0 -n 2\n"})}),"\n",(0,d.jsx)(n.h3,{id:"mount-the-raid-array-for-use",children:"Mount the RAID array for use"}),"\n",(0,d.jsx)(n.p,{children:"After you create the RAID array in above step, all partitions and data will be erased from all individual disks."}),"\n",(0,d.jsxs)(n.p,{children:["The RAID array is treated as a ",(0,d.jsx)(n.strong,{children:"logical drive"})," now."]}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:["Create a ",(0,d.jsx)(n.code,{children:"ext4"})," filesystem on the RAID array"]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mkfs.ext4 -F /dev/md/md0\n"})}),"\n",(0,d.jsxs)(n.ol,{start:"2",children:["\n",(0,d.jsx)(n.li,{children:"Mount the RAID array"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mkdir -p /mnt/md0\n\nsudo mount /dev/md/md0 /mnt/md0\n"})}),"\n",(0,d.jsx)(n.h3,{id:"save-raid-array-configuration",children:"Save RAID array configuration"}),"\n",(0,d.jsxs)(n.p,{children:["To make sure that the RAID array is reassembled and mounted automatically after reboot, we will have to add some necessary information into ",(0,d.jsx)(n.code,{children:"/etc/mdadm/mdadm.conf"})," and ",(0,d.jsx)(n.code,{children:"/etc/fstab"}),"."]}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsxs)(n.li,{children:["Scan active array and append into ",(0,d.jsx)(n.code,{children:"/etc/mdadm/mdadm.conf"})," file with following:"]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mdadm --detail --scan | sudo tee -a /etc/mdadm/mdadm.conf\n"})}),"\n",(0,d.jsxs)(n.ol,{start:"2",children:["\n",(0,d.jsxs)(n.li,{children:["Update ",(0,d.jsx)(n.code,{children:"initramfs"}),", so the array will be available at early boot:"]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo update-initramfs -u\n"})}),"\n",(0,d.jsxs)(n.ol,{start:"3",children:["\n",(0,d.jsxs)(n.li,{children:["Add mount options to ",(0,d.jsx)(n.code,{children:"/etc/fstab"}),", you can use ",(0,d.jsx)(n.code,{children:"UUID=xxxx"})," instead of the ",(0,d.jsx)(n.code,{children:"/dev/md0"}),"."]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"echo '/dev/md0 /mnt/md0 ext4 defaults,nofail,discard 0 0' | sudo tee -a /etc/fstab\n"})}),"\n",(0,d.jsx)(n.h2,{id:"remove-raid-array",children:"Remove RAID Array"}),"\n",(0,d.jsx)(n.h3,{id:"optional-umount-the-array-from-filesystem",children:"[Optional] Umount the array from filesystem"}),"\n",(0,d.jsx)(n.p,{children:"Umount the array from filesystem if mounted,"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo umount /dev/md/md0\n"})}),"\n",(0,d.jsx)(n.h3,{id:"stop-raid-container-and-array",children:"Stop RAID container and array"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"# Stop RAID container\nsudo mdadm --stop /dev/md/imsm0\n# Stop RAID array\nsudo mdadm --stop /dev/md/md0\n\n# Stop all arrays and containers\nsudo mdadm --stop --scan\n"})}),"\n",(0,d.jsx)(n.h3,{id:"removes-the-raid-metadata",children:"Removes the RAID metadata"}),"\n",(0,d.jsxs)(n.p,{children:["Removes the RAID metadata on each ",(0,d.jsx)(n.strong,{children:"drive"})," and resets the ",(0,d.jsx)(n.strong,{children:"drive"})," to normal"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mdadm --zero-superblock /dev/sda\nsudo mdadm --zero-superblock /dev/sd[a-h]\n"})}),"\n",(0,d.jsx)(n.h3,{id:"optional-remove-raid-configuration",children:"[Optional] Remove RAID configuration"}),"\n",(0,d.jsxs)(n.p,{children:["Remove mount information to the array if exist. Edit the ",(0,d.jsx)(n.code,{children:"/etc/fstab"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",metastring:'title="/etc/fstab"',children:"sudo nano /etc/fstab\n"})}),"\n",(0,d.jsxs)(n.p,{children:["Also, remove the array definition if exist, from the ",(0,d.jsx)(n.code,{children:"/etc/mdadm/mdadm.conf"})," file:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",metastring:'title="/etc/mdadm/mdadm.conf"',children:"sudo nano /etc/mdadm/mdadm.conf\n"})}),"\n",(0,d.jsx)(n.h2,{id:"manage-raid-array-with-mdadm",children:"Manage RAID Array with mdadm"}),"\n",(0,d.jsx)(n.h3,{id:"find-all-raid-arrays",children:"Find all RAID arrays"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"$ cat /proc/mdstat\n\nPersonalities : [raid1] [linear] [multipath] [raid0] [raid6] [raid5] [raid4] [raid10] \nmd126 : active raid1 nvme0n1[1] nvme1n1[0]\n      3800741888 blocks super external:/md127/0 [2/2] [UU]\n      \nmd127 : inactive nvme0n1[1](S) nvme1n1[0](S)\n      10402 blocks super external:imsm\n       \nunused devices: <none>\n"})}),"\n",(0,d.jsx)(n.h3,{id:"query-information-on-a-raid-array",children:"Query information on a RAID array"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mdadm --detail /dev/md0\nsudo mdadm --query /dev/md0\n"})}),"\n",(0,d.jsx)(n.h3,{id:"query-information-on-a-physical-disk-drive",children:"Query information on a physical disk drive"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mdadm --query /dev/sda\nsudo mdadm --examine /dev/sda\n"})}),"\n",(0,d.jsx)(n.h3,{id:"stop-a-raid-array",children:"Stop a RAID array"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mdadm --stop /dev/md0\n# Stop all arrays\nsudo mdadm --stop --scan\n"})}),"\n",(0,d.jsx)(n.h3,{id:"starting-a-raid-array",children:"Starting a RAID Array"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"# This works if the array is defined in the configuration `/etc/mdadm/mdadm.conf` file.\nsudo mdadm --assemble --scan\nsudo mdadm --assemble /dev/md0\n# If the array is not persisted in `/etc/mdadm/mdadm.conf` file but keeping RAID metadata\nsudo mdadm --assemble /dev/md0 /dev/sda /dev/sdb\n"})}),"\n",(0,d.jsx)(n.h3,{id:"adding-spare-devices-to-a-raid-array",children:"Adding spare devices to a RAID Array"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo mdadm /dev/md0 --add /dev/sde\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"$ lsblk -f\nNAME        FSTYPE          FSVER  LABEL UUID                                 FSAVAIL FSUSE% MOUNTPOINTS\nloop0       squashfs        4.0                                                     0   100% /snap/core20/1974\nloop1       squashfs        4.0                                                     0   100% /snap/lxd/24322\nloop2       squashfs        4.0                                                     0   100% /snap/snapd/19457\nsda         isw_raid_member 1.3.00                                                           \nsdb         isw_raid_member 1.3.00                                                           \nsdc         isw_raid_member 1.3.00                                                           \nsdd         isw_raid_member 1.3.00                                                           \nsde         isw_raid_member 1.3.00                                                           \nsdf         isw_raid_member 1.3.00                                                           \nsdg         isw_raid_member 1.3.00                                                           \nsdh         isw_raid_member 1.3.00                                                           \nnvme0n1     isw_raid_member 1.3.00                                                           \n\u251c\u2500md126                                                                                      \n\u2502 \u251c\u2500md126p1 vfat            FAT32        292B-DB66                                 1G     1% /boot/efi\n\u2502 \u2514\u2500md126p2 ext4            1.0          0f58386c-334d-4877-8051-b855bae37fb0    3.3T     0% /\n\u2514\u2500md127                                                                                      \nnvme1n1     isw_raid_member 1.3.00                                                           \n\u251c\u2500md126                                                                                      \n\u2502 \u251c\u2500md126p1 vfat            FAT32        292B-DB66                                 1G     1% /boot/efi\n\u2502 \u2514\u2500md126p2 ext4            1.0          0f58386c-334d-4877-8051-b855bae37fb0    3.3T     0% /\n\u2514\u2500md127                         \n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo fdisk -l /dev/sda\n"})}),"\n",(0,d.jsx)(n.h3,{id:"delete-partition-and-data-in-disk",children:"Delete partition and data in disk"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-sh",children:"sudo dd if=/dev/zero of=/dev/sda  bs=512  count=1\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>t});var d=a(96540);const r={},s=d.createContext(r);function i(e){const n=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),d.createElement(s.Provider,{value:n},e.children)}}}]);