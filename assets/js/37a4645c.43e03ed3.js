"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4716],{79930:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=s(74848),o=s(28453),t=s(72170),c=s.n(t);const i="# Use below credentials to access in `adminer` web to access `db`,\n# server:   db  (db1, db2 are also available!)\n# user:     postgres\n# password: example \nversion: '3.1'\n\nservices:\n\n  db:\n    image: postgres\n    restart: always\n    environment:\n      # POSTGRES_USER: postgres  # `postgres` in default.\n      POSTGRES_PASSWORD: example\n    networks:\n      default:\n        aliases:\n          - db1\n          - db2\n  adminer:\n    image: adminer\n    restart: always\n    ports:\n      - 8080:8080\n",a={authors:["frank"],description:"Communication Between Docker Containers",image:"https://i.imgur.com/mErPwqL.png",tags:["docker","docker-network","postgres","dev-ops"],date:new Date("2023-06-08T00:00:00.000Z"),draft:!1},d="Communication Between Docker Containers",l={id:"docker-containers-communication",title:"Communication Between Docker Containers",description:"Communication Between Docker Containers",source:"@site/../../docs/docker-containers-communication.mdx",sourceDirName:".",slug:"/docker-containers-communication",permalink:"/docs/docker-containers-communication",draft:!1,unlisted:!1,editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../docs/docker-containers-communication.mdx",tags:[{inline:!0,label:"docker",permalink:"/docs/tags/docker"},{inline:!0,label:"docker-network",permalink:"/docs/tags/docker-network"},{inline:!0,label:"postgres",permalink:"/docs/tags/postgres"},{inline:!0,label:"dev-ops",permalink:"/docs/tags/dev-ops"}],version:"current",lastUpdatedBy:"liviaerxin",lastUpdatedAt:1744924444e3,frontMatter:{authors:["frank"],description:"Communication Between Docker Containers",image:"https://i.imgur.com/mErPwqL.png",tags:["docker","docker-network","postgres","dev-ops"],date:"2023-06-08T00:00:00.000Z",draft:!1},sidebar:"docs",previous:{title:"Data Center",permalink:"/docs/data-center"},next:{title:"Share Data between Docker Containers",permalink:"/docs/docker-containers-data-sharing"}},h={},p=[{value:"Using <code>--link</code> flag(Legacy)",id:"using---link-flaglegacy",level:2},{value:"Using the default network",id:"using-the-default-network",level:2},{value:"Using the private network",id:"using-the-private-network",level:2},{value:"Use Case in Docker Compose",id:"use-case-in-docker-compose",level:2}];function g(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"communication-between-docker-containers",children:"Communication Between Docker Containers"}),"\n",(0,r.jsxs)(n.p,{children:["Sometimes between docker containers, we need connect container B from container A to do fast test, etc. For most well-known example, we have ",(0,r.jsx)(n.code,{children:"FastAPI"})," app container connect to ",(0,r.jsx)(n.code,{children:"postgres"})," db container. In addition, it's likely to do some sql test on ",(0,r.jsx)(n.code,{children:"PostgreSQL"})," db container in a third container."]}),"\n",(0,r.jsx)(n.p,{children:"Here some methods we can use."}),"\n",(0,r.jsxs)(n.h2,{id:"using---link-flaglegacy",children:["Using ",(0,r.jsx)(n.code,{children:"--link"})," flag(Legacy)"]}),"\n",(0,r.jsxs)(n.p,{children:["Start a ",(0,r.jsx)(n.code,{children:"postgres db"})," container:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --rm --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Run a ",(0,r.jsx)(n.code,{children:"postgres client"})," container to connect the ",(0,r.jsx)(n.code,{children:"db"})," container with user ",(0,r.jsx)(n.code,{children:"postgres"})," and password ",(0,r.jsx)(n.code,{children:"mysecretpassword"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'docker run -it --rm --link postgres-db:db postgres psql -h db -U postgres\npsql (14.3)\nType "help" for help.\n\npostgres=# SELECT 1;\n ?column? \n----------\n        1\n(1 row)\n'})}),"\n",(0,r.jsx)(n.p,{children:"Or run a utility container:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run -it --rm --link postgres-db:db busybox sh\n# in `busybox`\nping db\n"})}),"\n",(0,r.jsx)(n.h2,{id:"using-the-default-network",children:"Using the default network"}),"\n",(0,r.jsxs)(n.p,{children:["If you are running your container without specifying attached ",(0,r.jsx)(n.code,{children:"network"}),", it will use the docker ",(0,r.jsx)(n.code,{children:"default bridge network"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["However The ",(0,r.jsx)(n.code,{children:"default bridge network"})," allows container-to-container communication by ",(0,r.jsx)(n.code,{children:"IP address"})," only. To use ",(0,r.jsx)(n.code,{children:"hostname"})," or ",(0,r.jsx)(n.code,{children:"alias name"})," in connecting rather than IP address, see the following methods."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["So before connecting, we need get the container IP address by ",(0,r.jsx)(n.code,{children:"docker inspect"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Start a ",(0,r.jsx)(n.code,{children:"postgres db"})," container:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --rm --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Get the IP address of the ",(0,r.jsx)(n.code,{children:"postgres db"})," container:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'docker inspect mynginx | grep IPAddress\n            "IPAddress": "172.17.0.2",\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Run a ",(0,r.jsx)(n.code,{children:"postgres client"})," container to connect the ",(0,r.jsx)(n.code,{children:"db"})," container:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'docker run -it --rm postgres psql -h "172.17.0.2" -U postgres\npsql (14.3)\nType "help" for help.\n\npostgres=# SELECT 1;\n ?column? \n----------\n        1\n(1 row)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"using-the-private-network",children:"Using the private network"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Creating private bridge network"})," will give you more privacy that it only allows only containers belonging to it can talk to each other."]}),"\n",(0,r.jsxs)(n.p,{children:["Moreover, you can use ",(0,r.jsx)(n.code,{children:"hostname"})," or ",(0,r.jsx)(n.code,{children:"alias name"})," to connect without regard of ",(0,r.jsx)(n.code,{children:"IP address"})," changing due to re-start."]}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"private bridge network"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker network create postgres-net\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Start a ",(0,r.jsx)(n.code,{children:"postgres db"})," container:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"docker run --rm --net postgres-net --name postgres-db --detach -e POSTGRES_PASSWORD=mysecretpassword postgres\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Run a ",(0,r.jsx)(n.code,{children:"postgres client"})," container to connect the ",(0,r.jsx)(n.code,{children:"db"})," container:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:'docker run -it --rm --net postgres-net postgres psql -h postgres-db -U postgres\npsql (14.3)\nType "help" for help.\n\npostgres=# SELECT 1;\n ?column? \n----------\n        1\n(1 row)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"use-case-in-docker-compose",children:"Use Case in Docker Compose"}),"\n",(0,r.jsxs)(n.p,{children:["Actually, ",(0,r.jsx)(n.code,{children:"docker compose"})," will create its ",(0,r.jsx)(n.code,{children:"private bridge network"}),", and when it start containers, containers will be attached to that network in default."]}),"\n","\n",(0,r.jsx)(c(),{language:"yaml",title:"docker-compose-postgres.yml",children:i})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);