"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4092],{23653:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var t=i(74848),o=i(28453);const s={foam_template:{name:"Docs Docusaurus Template",description:"Creates Docusaurus docs/slip",filepath:"docs/wiki-ffmpeg.md"},authors:["frank"],description:"Learn FFmpeg",keywords:["learn","ffmpeg"],image:"https://i.imgur.com/mErPwqL.png",tags:["cheat-sheet","ffmpeg"],date:new Date("2024-12-06T00:00:00.000Z")},a="FFmpeg Command Samples",r={id:"ffmpeg-command-samples",title:"FFmpeg Command Samples",description:"Learn FFmpeg",source:"@site/../../docs/ffmpeg-command-samples.md",sourceDirName:".",slug:"/ffmpeg-command-samples",permalink:"/docs/ffmpeg-command-samples",draft:!1,unlisted:!1,editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../docs/ffmpeg-command-samples.md",tags:[{inline:!0,label:"cheat-sheet",permalink:"/docs/tags/cheat-sheet"},{inline:!0,label:"ffmpeg",permalink:"/docs/tags/ffmpeg"}],version:"current",lastUpdatedBy:"liviaerxin",lastUpdatedAt:1744600077e3,frontMatter:{foam_template:{name:"Docs Docusaurus Template",description:"Creates Docusaurus docs/slip",filepath:"docs/wiki-ffmpeg.md"},authors:["frank"],description:"Learn FFmpeg",keywords:["learn","ffmpeg"],image:"https://i.imgur.com/mErPwqL.png",tags:["cheat-sheet","ffmpeg"],date:"2024-12-06T00:00:00.000Z"},sidebar:"docs",previous:{title:"Lock Http Request",permalink:"/docs/fastapi-best-practices"},next:{title:"Install FFmpeg on Nvidia CUDA Container",permalink:"/docs/ffmpeg-on-cuda-container"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"About FFmpeg Command",id:"about-ffmpeg-command",level:2},{value:"FFmpeg Command Examples",id:"ffmpeg-command-examples",level:2},{value:"List all available <code>container</code> formats",id:"list-all-available-container-formats",level:3},{value:"List all available <code>codec</code> formats",id:"list-all-available-codec-formats",level:3},{value:"List all available <code>encoder</code> or <code>decoder</code>",id:"list-all-available-encoder-or-decoder",level:3},{value:"List all frames timestamp",id:"list-all-frames-timestamp",level:3},{value:"List all keyframe(I-frame) timestamp",id:"list-all-keyframei-frame-timestamp",level:3},{value:"Read video information json output",id:"read-video-information-json-output",level:3},{value:"Transcode video",id:"transcode-video",level:3},{value:"Set keyframe interval",id:"set-keyframe-interval",level:3},{value:"Clip video",id:"clip-video",level:3},{value:"Slow down/Speed up video",id:"slow-downspeed-up-video",level:3},{value:"Draw region of interest(ROI) on a video",id:"draw-region-of-interestroi-on-a-video",level:3},{value:"Pipe ffmpeg",id:"pipe-ffmpeg",level:3},{value:"Use testsrc",id:"use-testsrc",level:3},{value:"Split and Concatenate",id:"split-and-concatenate",level:3},{value:"References",id:"references",level:2}];function p(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"ffmpeg-command-samples",children:"FFmpeg Command Samples"}),"\n",(0,t.jsx)(n.p,{children:"A list of FFmpeg command samples for quick lookup!"}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["Examples of Container and Codec lists in Chrome",(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-chrome",id:"user-content-fnref-chrome","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),":"]}),"\n",(0,t.jsx)(n.p,{children:"Video Container Format:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["MP4 [",(0,t.jsx)(n.code,{children:".mp4"})," file extension]"]}),"\n",(0,t.jsx)(n.li,{children:"Ogg"}),"\n",(0,t.jsx)(n.li,{children:"WebM"}),"\n",(0,t.jsx)(n.li,{children:"WAV"}),"\n",(0,t.jsxs)(n.li,{children:["HLS [",(0,t.jsx)(n.code,{children:".m3u8"})," file extension]"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Video Codec Format:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"VP8"}),"\n",(0,t.jsx)(n.li,{children:"VP9"}),"\n",(0,t.jsx)(n.li,{children:"H.264 [Chrome only]"}),"\n",(0,t.jsx)(n.li,{children:"H.265 [Chrome only and also only with the underlying OS support]"}),"\n",(0,t.jsxs)(n.li,{children:["MPEG-4 [Chrome OS only, aka ",(0,t.jsx)(n.strong,{children:"Xvid"}),", ",(0,t.jsx)(n.strong,{children:"DivX"}),"]"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"about-ffmpeg-command",children:"About FFmpeg Command"}),"\n",(0,t.jsxs)(n.p,{children:["The common patter of ",(0,t.jsx)(n.code,{children:"ffmpeg"})," looks like:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffmpeg [input_options] -i input.mp4 [output_options] output.mp4\n"})}),"\n",(0,t.jsx)(n.p,{children:"In short:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"[input_options]"})," before ",(0,t.jsx)(n.code,{children:"-i input.mp4"})," are options used for decoding the video"]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"[output_options]"})," before ",(0,t.jsx)(n.code,{children:"output.mp4"})," are options used for encoding the video"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"ffmpeg-command-examples",children:"FFmpeg Command Examples"}),"\n",(0,t.jsxs)(n.p,{children:["It's note worthing to look over FFmpeg Wiki ",(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-ffmpeg",id:"user-content-fnref-ffmpeg","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"2"})})]}),"\n",(0,t.jsxs)(n.h3,{id:"list-all-available-container-formats",children:["List all available ",(0,t.jsx)(n.code,{children:"container"})," formats"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffmpeg -formats\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"list-all-available-codec-formats",children:["List all available ",(0,t.jsx)(n.code,{children:"codec"})," formats"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffmpeg -codecs\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"list-all-available-encoder-or-decoder",children:["List all available ",(0,t.jsx)(n.code,{children:"encoder"})," or ",(0,t.jsx)(n.code,{children:"decoder"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffmpeg -encoders\nffmpeg -decoders\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Show available `presets`\nffmpeg -h encoder=h264_nvenc\n"})}),"\n",(0,t.jsx)(n.h3,{id:"list-all-frames-timestamp",children:"List all frames timestamp"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffprobe -select_streams v -show_entries frame=pict_type,pts_time -of csv=p=0 -i input.mp4\n"})}),"\n",(0,t.jsx)(n.h3,{id:"list-all-keyframei-frame-timestamp",children:"List all keyframe(I-frame) timestamp"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffprobe -select_streams v -show_entries frame=pict_type,pts_time -of csv=p=0 -skip_frame nokey -i input.mp4\n"})}),"\n",(0,t.jsx)(n.h3,{id:"read-video-information-json-output",children:"Read video information json output"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffprobe -v quiet -show_streams -select_streams v:0 -print_format json video.mp4\n"})}),"\n",(0,t.jsx)(n.h3,{id:"transcode-video",children:"Transcode video"}),"\n",(0,t.jsx)(n.p,{children:"There are three possible and reasonable methods for transcoding:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"software decoding and software encoding"}),"\n",(0,t.jsx)(n.li,{children:"software decoding and hardware encoding"}),"\n",(0,t.jsx)(n.li,{children:"hardware decoding and hardware encoding"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["you can convert either the ",(0,t.jsx)(n.code,{children:"container formats"})," or the ",(0,t.jsx)(n.code,{children:"codecs formats"}),", such as:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# To `mp4` container and `h.264` codecs(the lower crf, the higher quality)\nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 output.mp4\n\n# To `mp4` container and `mpeg4` codecs\nffmpeg -i input.avi -c:v libxvid -preset fast output.mp4\n\n# To be friendly for streaming, adding necessary metadata to begin playback faster! \nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 -movflags +faststart output.mp4\n\n# Remove audio\nffmpeg -i input.avi -c:v libx264 -preset fast -crf 23 -an output.mp4\n\n# Use NVIDIA GPU\nffmpeg -i input.avi -c:v h264_nvenc -preset fast output.avi\n\n# keep quality\nffmpeg -i input.avi -c:v h264_nvenc -preset fast -rc constqp -cq 19 output.avi\n"})}),"\n",(0,t.jsx)(n.h3,{id:"set-keyframe-interval",children:"Set keyframe interval"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# mpeg4\nffmpeg -i input.avi -vcodec libxvid -preset fast -g 10 -keyint_min 10 -sc_threshold 0 output.avi \n\n# NVIDIA GPU\n# This sets the I-frame interval at 10 and ensures that no I-frames will be inserted in scene changes\nffmpeg -i input.avi -vcodec h264_nvenc -preset fast -g 10 -keyint_min 10 -sc_threshold 0 output.avi\n"})}),"\n",(0,t.jsx)(n.h3,{id:"clip-video",children:"Clip video"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Fast clip with stream copy and faster seeking(700x)\nffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:50 -c:v copy output.mp4\n\n# Fast clip with stream copy and slower seeking(600x)\nffmpeg -i video.mp4 -ss 00:00:10 -to 00:00:50 -c:v copy output.mp4\n\n# Slow clip with re-encoding and faster seeking(1x)\nffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:50 -c:v libx264 output.mp4\n"})}),"\n",(0,t.jsx)(n.p,{children:"Use filter(Slow)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'ffmpeg -y -i input.mp4 -an -c:v libx264 -filter:v "trim=start=10:end=30" output.mp4\n# remove the black video\nffmpeg -y -i input.mp4 -an -c:v libx264 -filter:v "trim=start=10:end=30,setpts=PTS-STARTPTS" output.mp4\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"NOTE: Cutting video with stream copy will lead the start frame is not precise!"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"slow-downspeed-up-video",children:"Slow down/Speed up video"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'# Slow down to 1/2x in fast way\nffmpeg -y -itsscale 2 -i video.mp4 -c:v copy output.mp4\n\n# Speed up to 2x in fast way\nffmpeg -y -itsscale 0.5 -i video.mp4 -c:v copy output.mp4\n\n# Speed up to 2x with re-encoding in slow way\nffmpeg -y -itsscale 0.5 -i video.mp4 -c:v libx264 output.mp4\n\n# Speed up to 2x with `setpts filter`(which requires re-encoding) in slow way\nffmpeg -i video.mp4 -filter:v "setpts=0.5*PTS" output.mp4\n\n# Change fps to slow down/speed up but keeping duration\nffmpeg -i video.mp4 -filter:v "fps=30" output.mp4\n'})}),"\n",(0,t.jsx)(n.h3,{id:"draw-region-of-interestroi-on-a-video",children:"Draw region of interest(ROI) on a video"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'# Draw one drawbox\n\nffmpeg -i input.mp4 -filter:v "drawbox=x=100:y=100:w=200:h=150:color=red@0.5" output.mp4\n\nffmpeg -i input.mp4 -filter:v "drawbox=x=100:y=100:w=200:h=150:color=red@0.5,drawtext=text=\'Test Text\':x=100:y=100:fontsize=24:fontcolor=yellow:box=1:boxcolor=yellow" output.mp4\n\nffmpeg -y -ss 30 -noaccurate_seek -i input.mp4 -t 10 -c:v libx264 -filter:v "drawbox=x=100:y=100:w=200:h=150:color=red@0.5,drawtext=text=\'Test Text\':x=100:y=(100-text_h):fontsize=24:fontcolor=black:box=1:boxcolor=red:boxborderw=2" output.mp4\n# Trim video and draw box\nffmpeg -y -i input.mp4 -an -c:v libx264 -filter:v "trim=start=10:end=30,drawbox=x=100:y=100:w=200:h=150:color=red@0.5:enable=\'between(t,10,15)\',setpts=PTS-STARTPTS" output.mp4\n\nffmpeg -y -i input.mp4 -i overlay_video.mp4 -filter_complex "[0:v][1:v]overlay=0:0:enable=\'between(t,0,25)\'" output.mp4\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Draw different `drawbox` at different time on video from a file(using `timeline` feature)\n# See timeline: https://ffmpeg.org/ffmpeg-filters.html#Timeline-editing\n# See expression: https://ffmpeg.org/ffmpeg-utils.html#Expression-Evaluation\nffmpeg -i input.mp4 -filter_complex_script timeline.txt output.mp4\n\n# `timeline.txt` look like:\n[0:v]drawbox=x=100:y=100:w=200:h=150:color=red@0.5:enable='between(t,0,21)'[box1];\n[box1]drawbox=x=300:y=200:w=150:h=100:color=green@0.5:t=:enable='between(t,21,40)'[box2];\n[box2]drawbox=x=50:y=300:w=300:h=200:color=blue@0.5:t=:enable='between(t,41,60)'\n\n\n# or using `n`: sequential number of the input frame, starting from 0\n[0:v]drawbox=x=100:y=100:w=200:h=150:color=red@0.5:n=0:600[box1];\n[box1]drawbox=x=300:y=200:w=150:h=100:color=green@0.5:n=601:1200[box2];\n[box2]drawbox=x=50:y=300:w=300:h=200:color=blue@0.5:n=1201:1800\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"# Draw different `drawbox` at different time on video\nffmpeg -i input.mp4 -filter_complex \"[0:v]drawbox=x=100:y=100:w=200:h=150:color=red:t=8:enable='between(t,0,21)'[box1];[box1]drawbox=x=300:y=200:w=150:h=100:color=green:t=8:enable='between(t,21,40)'[box2];[box2]drawbox=x=50:y=300:w=300:h=200:color=blue:t=8:enable='between(t,41,60)'\" output.mp4\n"})}),"\n",(0,t.jsx)(n.h3,{id:"pipe-ffmpeg",children:"Pipe ffmpeg"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"FFmpeg Pipe"})," is very useful in ",(0,t.jsx)(n.strong,{children:"IPC"})," for communicating ",(0,t.jsx)(n.code,{children:"FFmpeg"})," with another ",(0,t.jsx)(n.code,{children:"process"}),". For instance, an application generates images to ",(0,t.jsx)(n.code,{children:"Pipe"})," stdin which ",(0,t.jsx)(n.code,{children:"FFmpeg"})," reads and encodes into a video."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"A real-life scenario that FFmpeg read from Pipe"}),":\nAn application applied ",(0,t.jsx)(n.code,{children:"OpenCV"})," to process images for object detection, and it will draw ROI but lacks ability to encode a video as efficiently as ",(0,t.jsx)(n.code,{children:"FFmpeg"})," does. So it's somewhat ideal to pipe these images to ",(0,t.jsx)(n.code,{children:"FFmpeg"})," that can encode the video by leveraging hardware acceleration(GPU) capability."]}),"\n",(0,t.jsxs)(n.p,{children:["However, FFmpeg can also ",(0,t.jsx)(n.strong,{children:"write to a Pipe"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'# It works in Linux and Windows(`cmd`, does not work in `PS`)\nffmpeg -ss 00:00:10 -i video.mp4 -to 00:00:20 -an -c:v copy -f h264 pipe: | ffmpeg -y -i pipe: -filter:v "drawbox=x=100:y=100:w=200:h=150:color=red" output.mp4\n\nffmpeg -i input.mp4 -c:v rawvideo -pix_fmt bgr24 -r 60 -f rawvideo pipe: | ffmpeg -y -f rawvideo -pix_fmt bgr24 -s 1920x1080 -r 60 -i pipe: -pix_fmt yuv420p -c:v h264_nvenc foo.mp4\nffmpeg -i input.mp4 -pix_fmt yuv420p -r 60 -f rawvideo pipe: | ffmpeg -y -f rawvideo -pix_fmt yuv420p -s 1920x1080 -r 60 -i pipe: -c:v h264_nvenc foo.mp4\nffmpeg -i input.mp4 -an -f h264 pipe: | ffmpeg -y -f h264 -i pipe: -c:v h264_nvenc foo.mp4\n'})}),"\n",(0,t.jsx)(n.h3,{id:"use-testsrc",children:"Use testsrc"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffmpeg -y -f lavfi -i testsrc=duration=10:size=1920x1080:rate=60 -c:v libx264 -pix_fmt yuv420p testsrc.mp4\n"})}),"\n",(0,t.jsx)(n.h3,{id:"split-and-concatenate",children:"Split and Concatenate"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffmpeg -y -i input.mp4 -ss 0 -to 10 -c:v copy part1.mp4\nffmpeg -y -i input.mp4 -ss 10 -to 15 -c:v copy part2.mp4\nffmpeg -y -i input.mp4 -ss 15 -c:v copy part3.mp4\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'ffmpeg -y -i part2.mp4 -filter:v "drawbox=x=100:y=100:w=200:h=150:color=red@0.5" part2-draw.mp4\n'})}),"\n",(0,t.jsx)(n.p,{children:"Slow,"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'ffmpeg -y -i part1.mp4 -i part2-draw.mp4 -i part3.mp4 -filter_complex "[0:v][1:v][2:v]concat=n=3:v=1:a=0[outv]" -map "[outv]" output.mp4\n'})}),"\n",(0,t.jsx)(n.p,{children:"Fast(Concat protocol),"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'ffmpeg -i part1.mp4 -c copy part1.ts\nffmpeg -i part2-draw.mp4 -c copy part2-draw.ts\nffmpeg -i part3.mp4 -c copy part3.ts\n\nffmpeg -y -i "concat:part1.ts|part2-draw.ts|part3.ts" -c:v copy output.mp4\n'})}),"\n",(0,t.jsx)(n.p,{children:"Fast(Concat demuxer),"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"ffmpeg -y -f concat -i concat.txt -c:v copy output.mp4\n# concat.txt\nfile 'part1.mp4'\nfile 'part2-draw.mp4'\nfile 'part3.mp4'\n\n# Or avoid creating the input file\n# bash\nffmpeg -y -f concat -safe 0 -i <(echo \"file '$PWD/part1.mp4'\";echo \"file '$PWD/part2-draw.mp4'\";echo \"file '$PWD/part3.mp4'\";) -c:v copy output.mp4\n# cmd\nffmpeg -y -f concat -safe 0 -i <(@echo \"file '$PWD/part1.mp4'\";@echo \"file '$PWD/part2-draw.mp4'\";@echo \"file '$PWD/part3.mp4'\";) -c:v copy output.mp4\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://trac.ffmpeg.org/wiki/Concatenate",children:"https://trac.ffmpeg.org/wiki/Concatenate"})}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n","\n",(0,t.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,t.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{id:"user-content-fn-chrome",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.chromium.org/audio-video/",children:"Chrome Audio/Video Support"})," ",(0,t.jsx)(n.a,{href:"#user-content-fnref-chrome","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{id:"user-content-fn-ffmpeg",children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://trac.ffmpeg.org/wiki",children:"FFmpeg Wiki"})," ",(0,t.jsx)(n.a,{href:"#user-content-fnref-ffmpeg","data-footnote-backref":"","aria-label":"Back to reference 2",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(96540);const o={},s=t.createContext(o);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);