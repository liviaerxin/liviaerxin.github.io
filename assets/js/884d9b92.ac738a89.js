"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9283],{78987:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});var r=i(74848),s=i(28453);const a={},d="Graphical User Interface(GUI)",t={id:"graphical-user-interface",title:"Graphical User Interface(GUI)",description:"Modern GUI composition of:",source:"@site/../../docs/graphical-user-interface.md",sourceDirName:".",slug:"/graphical-user-interface",permalink:"/docs/graphical-user-interface",draft:!1,unlisted:!1,editUrl:"https://github.com/liviaerxin/liviaerxin.github.io/edit/master/_ssg/docusaurus/../../docs/graphical-user-interface.md",tags:[],version:"current",lastUpdatedBy:"liviaerxin",lastUpdatedAt:1744924444e3,frontMatter:{},sidebar:"docs",previous:{title:"Git Best Practices",permalink:"/docs/git-best-practices"},next:{title:"Hello from Docusaurus",permalink:"/docs/doc-with-tags"}},l={},c=[{value:"Android graphics",id:"android-graphics",level:2},{value:"WayLand",id:"wayland",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"graphical-user-interfacegui",children:"Graphical User Interface(GUI)"}),"\n",(0,r.jsx)(n.p,{children:"Modern GUI composition of:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Windowing System/Compositor","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Quartz Compositor(OSX)"}),"\n",(0,r.jsx)(n.li,{children:"Desktop Window Manager(Windows)"}),"\n",(0,r.jsx)(n.li,{children:"X11(Linux)"}),"\n",(0,r.jsx)(n.li,{children:"Wayland(Linux)"}),"\n",(0,r.jsx)(n.li,{children:"SurfaceFlinger(Android)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Graphic Rendering","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Hardware-Accelerated Rendering","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"OpenGL"}),"\n",(0,r.jsx)(n.li,{children:"Vulkan"}),"\n",(0,r.jsx)(n.li,{children:"DirectX"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Software Rendering","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"QT Rasterization Engine"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Windowing System"}),"\n",(0,r.jsxs)(n.p,{children:["It's very essential to apply the ",(0,r.jsx)(n.code,{children:"native Windowing System"})," library for Cross-platform GUI framework in different platforms. Here's a cue from ",(0,r.jsx)(n.a,{href:"https://github.com/glfw/glfw/blob/3a60992a418aad88717db32353bec22e8bb7dab3/include/GLFW/glfw3native.h#L94-L118",children:"including native windowing system headers from GLFW"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"#if !defined(GLFW_NATIVE_INCLUDE_NONE)\n #if defined(GLFW_EXPOSE_NATIVE_WIN32) || defined(GLFW_EXPOSE_NATIVE_WGL)\n  /* This is a workaround for the fact that glfw3.h needs to export APIENTRY (for\n   * example to allow applications to correctly declare a GL_KHR_debug callback)\n   * but windows.h assumes no one will define APIENTRY before it does\n   */\n  #if defined(GLFW_APIENTRY_DEFINED)\n   #undef APIENTRY\n   #undef GLFW_APIENTRY_DEFINED\n  #endif\n  #include <windows.h>\n #elif defined(GLFW_EXPOSE_NATIVE_COCOA) || defined(GLFW_EXPOSE_NATIVE_NSGL)\n  #if defined(__OBJC__)\n   #import <Cocoa/Cocoa.h>\n  #else\n   #include <ApplicationServices/ApplicationServices.h>\n   #include <objc/objc.h>\n  #endif\n #elif defined(GLFW_EXPOSE_NATIVE_X11) || defined(GLFW_EXPOSE_NATIVE_GLX)\n  #include <X11/Xlib.h>\n  #include <X11/extensions/Xrandr.h>\n #elif defined(GLFW_EXPOSE_NATIVE_WAYLAND)\n  #include <wayland-client.h>\n #endif\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Windowing_system",children:"Windowing system - Wikipedia"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.baeldung.com/linux/gui",children:"GUI Under Linux | Baeldung on Linux"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/GTK",children:"GTK - Wikipedia"})}),"\n",(0,r.jsx)(n.p,{children:"Graphic Render APIs/Libraries"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://alain.xyz/blog/comparison-of-modern-graphics-apis",children:"A Comparison of Modern Graphics APIs"})}),"\n",(0,r.jsx)(n.h2,{id:"android-graphics",children:"Android graphics"}),"\n",(0,r.jsx)(n.p,{children:"two core pieces:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SurfaceFlinger"}),"\n",(0,r.jsx)(n.li,{children:"Skia"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://source.android.com/devices/graphics",children:"Graphics \xa0|\xa0 Android Open Source Project"}),"\n",(0,r.jsx)(n.a,{href:"https://stackoverflow.com/questions/4579573/android-graphics-internals",children:"Android Graphics Internals - Stack Overflow"})]}),"\n",(0,r.jsx)(n.h2,{id:"wayland",children:"WayLand"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://bugaevc.gitbooks.io/writing-wayland-clients/content/about-this-book/what-is-wayland.html",children:"What is Wayland? \xb7 Writing Wayland clients"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://hdante.wordpress.com/2014/07/08/the-hello-wayland-tutorial/",children:"The Hello Wayland Tutorial | FLOSS & Cia"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://medium.com/@bugaevc/how-to-use-wayland-with-c-to-make-a-linux-app-c2673a35ce05",children:"How to use Wayland with C to make a Linux app | by Sergey Bugaev | Medium"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>t});var r=i(96540);const s={},a=r.createContext(s);function d(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);